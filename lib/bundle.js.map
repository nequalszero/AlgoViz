{"version":3,"sources":["webpack:///webpack/bootstrap e59169153fc0f7ac4624","webpack:///./lib/entry.js","webpack:///./lib/algorithm_visualization.js","webpack:///./lib/quicksort.js","webpack:///./lib/animation_options.js","webpack:///./~/animejs/anime.js","webpack:///./lib/test.js"],"names":["document","addEventListener","event","visAreaId","svgPathContainerId","algorithmTitleId","drawingAreaId","sidebarAreaId","AlgorithmVisualization","sizeVisualizationArea","options","buildOptions","quickSort","$","css","windowWidth","window","width","algorithmTitle","sidebarWidth","windowHeight","innerHeight","console","log","svgContHeight","parseInt","outerHeight","height","arrayElContainerClass","bracketElClass","animateElClass","stationaryElClass","arrayElClass","plusElClass","spaceElClass","layerBackgroundClass","activeElementClass","inactiveElementClass","pivotElementClass","pivotColor","pathColor","pathWidth","elementHeightFactor","elementWidthFactor","elementRadiusFactor","fontSizeFactor","colorClasses","lightBlue1","lightBlue2","lightBlue3","lightBlue4","lightBlue5","module","exports","Quicksort","startArray","numElements","length","leftIndent","calculateLeftIndent","html","renderStartLayer","configureLayerOptions","renderBackgrounds","renderLayers","hideLayers","configureTimingOptions","fadeInStartLayer","beginAnimations","sortLayers","mergeLayers","layers","concat","fromArrays","sectionCharStrings","fromLayers","toLayers","referenceEls","customOffset","dir","offsetChars","i","getLayerClass","fadeOut","timeStagger","timingBetweenLayers","fadeInSpeed","startAnimationRunTime","layerDelays","prevLayer","base","waitTime","elements","toLayer","pathTime","referenceEl","referenceElPathTime","forEach","layer","getPathTraversalTime","fromLayer","val","el","prevToLayer","$layerBrackets","$layerPlusEls","$prevLayerEls","$layerBG","layerClass","prevLayerClass","setTimeout","fadeIn","bind","fromArray","elementDelay","markActivePivot","createAnimation","deactivateStagger","markInactive","markActive","idx","createArrayElId","timeDelay","animateable","$targetEl","addClass","removeClass","openingBracket","createArrayBracket","topOffset","leftOffset","bracketType","drawingArea","append","arrayElementParams","bracketWidth","elementWidth","createArrayElement","animate","closingBracket","backgroundClasses","Object","keys","createBackgroundLayerElement","colorClass","renderOptions","sectionCharString","elementHeight","layerLeftOffset","computeLayerLeftOffset","renderSection","createPaths","referenceLayer","sectionChars","split","currentChar","String","includes","plusWidth","spaceWidth","isNaN","prevElements","char","createPlusSign","createSpaceEl","newEl","prevRef","prevLeft","prevElement","horizontalShift","verticalShift","xStart","yStart","createSvgPath","AnimationOptions","pathContainer","calibrateSizings","plusSize","fontSize","Math","floor","plusHeight","spaceHeight","animationSpeed","configureAnimationSpeed","bindMethodsToWindow","createPathId","createArrayElClass","optionKeys","optionKey","areaWidth","visAreaHeight","elementRadius","min","bracketSize","bracketHeight","bracketTopOffsetAdjustment","ceil","idName","className","backgroundOptions","class","createBackgroundClass","$bg","offset","top","containerParams","id","$arrayElCont","left","elementParams","$element","textParams","style","$p","pathParams","fill","stroke","strokeWidth","d","$path","pathId","myPath","path","pathLength","getTotalLength","duration","targetId","targets","translateX","translateY","loop","easing","$bracketContainer","createBracketClass","$plusContainer","createPlusClass","$spaceContainer","createSpaceClass","vizAreaWidth","startSpaceOccupied","Test","calculateStartingLeftIndent","runTest2","testVal","animateableEl","$drawingArea","$testArrayElCont","testDivParams","testTextParams","$testElement","svgParams","$newSvg","$testmoveArrayElCont","testmoveDivParams","testmoveTextParams","$testmoveElement","$pMove","easings"],"mappings":"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ACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,uBAAsB,0BAA0B;AAChD,uBAAsB,kEAAkE;AACxF,uBAAsB,iCAAiC;AACvD,uBAAsB,iCAAiC;AACvD,uBAAsB,6BAA6B;AACnD,uBAAsB,+BAA+B;AACrD,uBAAsB,iCAAiC;AACvD,uBAAsB,kCAAkC;AACxD,uBAAsB,6BAA6B;AACnD,uBAAsB,qBAAqB,EAAE,eAAe,EAAE,cAAc;AAC5E,uBAAsB,wBAAwB;AAC9C,uBAAsB,wBAAwB;AAC9C,uBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,wCAAwC,EAAE;AACnE,0BAAyB,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA,QAAO;AACP,0BAAyB,8BAA8B,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,iDAAgD,6BAA6B;AAC7E,mDAAkD,uEAAuE;AACzH,mDAAkD,kFAAkF;AACpI,MAAK;AACL,iCAAgC,UAAU;AAC1C;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,kBAAkB,EAAE;AACrD;;AAEA;AACA;AACA;AACA,4DAA2D,aAAa,EAAE;AAC1E;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sDAAqD,8BAA8B,EAAE;AACrF,4BAA2B,EAAE,UAAU,EAAE,UAAU,EAAE;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,0BAA0B,EAAE;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,eAAc;AACd,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uDAAsD,uBAAuB;AAC7E;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,+EAA8E,4BAA4B,EAAE;AAC5G;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,6BAA6B,EAAE;AACvF;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA,sBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD,iEAAgE;AAChE,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA2B,mCAAmC;AAC9D;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,eAAe,qBAAqB;AACnF;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA,oCAAmC,QAAQ;AAC3C;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC;;;;;;;;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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e59169153fc0f7ac4624","import AlgorithmVisualization from './algorithm_visualization';\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  // console.log(\"Creating new AlgorithmVisualization instance\");\n  new AlgorithmVisualization();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/entry.js","import QuickSort from './quicksort';\nimport test from './test';\n\nconst visAreaId = \"visualization-area\";\nconst svgPathContainerId = \"path-container\";\nconst algorithmTitleId = \"vis-area-title\";\nconst drawingAreaId = \"drawing-area\";\nconst sidebarAreaId = \"sidebar-container\";\n\nclass AlgorithmVisualization {\n  constructor() {\n    this.sizeVisualizationArea();\n    this.visAreaId = visAreaId;\n    this.svgPathContainerId = svgPathContainerId;\n    this.algorithmTitleId = algorithmTitleId;\n    this.drawingAreaId = drawingAreaId;\n    this.options = this.buildOptions();\n\n    // new test(this.options);\n    this.quickSort();\n  }\n\n  sizeVisualizationArea() {\n    $(\"body\").css(\"overflow\", \"hidden\");\n    let windowWidth = $(window).width();\n    let algorithmTitle = $(`#${algorithmTitleId}`);\n    let sidebarWidth = $(`#${sidebarAreaId}`).width();\n\n    let windowHeight = $(window).innerHeight();\n    console.log(`windowHeight: ${windowHeight}`);\n    let svgContHeight = windowHeight - parseInt(algorithmTitle.outerHeight());\n\n    $(`#${visAreaId}`).width(windowWidth-sidebarWidth);\n    // $(`#${visAreaId}`).outerHeight(windowHeight);\n    $(`#${svgPathContainerId}`).width(windowWidth-sidebarWidth);\n    $(`#${svgPathContainerId}`).height(svgContHeight);\n    $(`#${drawingAreaId}`).height(svgContHeight);\n  }\n\n  quickSort() {\n    // console.log(\"Creating new QuickSort instance\");\n    new QuickSort(this.options);\n  }\n\n  buildOptions() {\n    return {\n      visAreaId: visAreaId,\n      algorithmTitleId: algorithmTitleId,\n      drawingAreaId: drawingAreaId,\n      svgPathContainerId: svgPathContainerId,\n      sidebarAreaId: sidebarAreaId,\n      arrayElContainerClass: \"array-element-container\",\n      bracketElClass: \"bracket-element\",\n      animateElClass: \"animate\",\n      stationaryElClass: \"stationary\",\n      arrayElClass: \"array-element\",\n      plusElClass: \"plus-element\",\n      spaceElClass: \"space-element\",\n      layerBackgroundClass: \"layer-background\",\n      activeElementClass: \"active-element\",\n      inactiveElementClass: \"inactive-element\",\n      pivotElementClass: \"pivot-element\",\n\n      pivotColor: \"yellow\",\n      pathColor: \"none\",    // invisible, only need to be visible for testing\n      pathWidth: 3,         // also only visible for testing\n      elementHeightFactor: 0.10,\n      elementWidthFactor: 0.045,\n      elementRadiusFactor: 0.35,\n      fontSizeFactor: 0.5,\n\n      colorClasses: {\n        lightBlue1: \"light-blue1\",\n        lightBlue2: \"light-blue2\",\n        lightBlue3: \"light-blue3\",\n        lightBlue4: \"light-blue4\",\n        lightBlue5: \"light-blue5\"\n      }\n    };\n  }\n}\n\nmodule.exports = AlgorithmVisualization;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithm_visualization.js","import AnimationOptions from './animation_options';\nimport anime from 'animejs';\n\nclass Quicksort extends AnimationOptions {\n  constructor(options) {\n    super(options);\n    this.startArray = [5, 1, 2, 3, 7, 4, 0 , 6];\n    this.numElements = this.startArray.length;\n    this.leftIndent = this.calculateLeftIndent();\n    this.algorithmTitle.html(\"Quicksort Visualization\");\n    this.renderStartLayer();\n    this.configureLayerOptions();\n    this.renderBackgrounds();\n    this.renderLayers();\n\n    $(\"body\").html($(\"body\").html());\n\n    this.hideLayers();\n    this.configureTimingOptions();\n    this.fadeInStartLayer();\n    this.beginAnimations();\n\n    // this.animateLayers();  // test function to make sure all animations work\n  }\n\n  // create renderOptions for layers 1-8 (after start layer)\n  configureLayerOptions() {\n    let sortLayers = ['L1', 'L2-left', 'L2-right', 'L3', 'L4'];\n    let mergeLayers = ['L5-left', 'L5-right', 'L6-left', 'L6-right-l',\n                       'L6-right-r', 'L7-left', 'L7-mid', 'L7-right', 'L8'];\n\n    this.layers = [].concat(sortLayers).concat(mergeLayers);\n\n    this.fromArrays = {\n        'L1':       this.startArray,      // layer 0 - 1\n        'L2-left':  [1, 0],               // layer 1-2 left\n        'L2-right': [5, 3, 7, 4, 6],      // layer 1-2 right\n        'L3':       [5, 7, 6],            // layer 3\n        'L4':       [5, 6],               // layer 4\n        'L5-left':       [5, 6],            // layer 5 left\n        'L5-right':       [7],            // layer 5 right\n        'L6-left':       [0, 1],\n        'L6-right-l':       [3, 4],\n        'L6-right-r': [5, 6, 7],\n        'L7-left': [0, 1],\n        'L7-mid': [2],\n        'L7-right': [3, 4, 5, 6, 7],\n        'L8': [0, 1, 2, 3, 4, 5, 6, 7],\n    };\n\n    this.sectionCharStrings = {\n      'L1':       '[10]+[2]+[53746]',   // layer 1\n      'L2-left':  '[0]+[1]+[ ]',    // layer 2 left\n      'L2-right': '[3]+[4]+[576]',  // layer 2 right\n      'L3':       '[56]+[7]+[ ]',   // layer 3\n      'L4':       '[5]+[6]+[ ]',    // layer 4\n      'L5-left':       '[56]+',       // layer 5 left\n      'L5-right':       '[7]',       // layer 5 right\n      'L6-left':       '[0]+[1]+[ ]',       // layer 6 left\n      'L6-right-l':       '[3]+[4]+',       // layer 6 right - left half\n      'L6-right-r':       '[567]',       // layer 6 right - right half\n      'L7-left': '[01]+',\n      'L7-mid': '[2]+',\n      'L7-right': '[34567]',\n      'L8': '[01234567]',\n    };\n\n    this.fromLayers = {\n      'L1':        0,\n      'L2-left':   1,\n      'L2-right':  1,\n      'L3':        2,\n      'L4':        3,\n      'L5-left':        4,\n      'L5-right':        3,\n      'L6-left':   2,\n      'L6-right-l':  2,\n      'L6-right-r':  5,\n      'L7-left': 6,\n      'L7-mid': 1,\n      'L7-right': 6,\n      'L8': 7,\n    };\n\n    this.toLayers = {\n      'L1':         1,\n      'L2-left':   2,\n      'L2-right':  2,\n      'L3':         3,\n      'L4':         4,\n      'L5-left':         5,\n      'L5-right':         5,\n      'L6-left':   6,\n      'L6-right-l':  6,\n      'L6-right-r':  6,\n      'L7-left': 7,\n      'L7-mid': 7,\n      'L7-right': 7,\n      'L8': 8,\n    };\n\n    this.referenceEls = {\n      'L1':         2,\n      'L2-left':   1,\n      'L2-right':  4,\n      'L3':         7,\n      'L4':         6,\n      'L5-left':         6,\n      'L5-right':         7,\n      'L6-left':   1,\n      'L6-right-l':  4,\n      'L6-right-r':  5,\n      'L7-left': 0,\n      'L7-mid': 2,\n      'L7-right': 4,\n      'L8': 2,\n    };\n\n    // for positioning reference\n    this.customOffset = {\n      'L6-right-r':  { dir: 1, offsetChars: '4]+' },\n      'L7-left': { dir: 1, offsetChars: '0]+' },\n      'L7-right': { dir: -1, offsetChars: '[345'}\n    };\n  }\n\n\n  // hides layers after rendering in preparation for animation\n  hideLayers() {\n    for (let i = 0; i <= 8; i ++) {\n        $(`.${this.getLayerClass(i)}`).fadeOut(0);\n    }\n  }\n\n  // Calculate timings for each layer\n  configureTimingOptions() {\n    this.timeStagger = 150;\n    this.timingBetweenLayers = 500;\n    this.fadeInSpeed = 1500;\n\n    // Animation time of the start layer\n    // this.startAnimationRunTime = this.timingBetweenLayers +\n    //                              (this.startArray.length-1) * this.timeStagger +\n    //                              this.fadeInSpeed;\n    this.startAnimationRunTime = -1*this.timingBetweenLayers +\n                                 (this.startArray.length-1) * this.timeStagger +\n                                 this.fadeInSpeed;\n\n    this.layerDelays = {};\n\n    let prevLayer = this.layers[0];\n\n    // Layer 0 total delay is time to fade in start array elements + fadeInSpeed\n    //   for the last element + timing between layers\n    this.layerDelays[prevLayer] = {};\n    this.layerDelays[prevLayer] = {base: this.startAnimationRunTime,\n                                   waitTime: this.fadeInSpeed -1*this.timingBetweenLayers, \n                                   elements: {}};\n\n    let toLayer, numElements, pathTime, referenceEl, referenceElPathTime;\n\n    this.layers.forEach(layer => {\n      toLayer = this.toLayers[layer];\n      numElements = this.fromArrays[layer].length;\n\n      if (layer !== this.layers[0]) {\n        this.layerDelays[layer] = {base: 0, waitTime: 0, elements: {}};\n        this.layerDelays[layer].base += this.layerDelays[prevLayer].base +\n                                        this.layerDelays[prevLayer].waitTime;\n        this.layerDelays[layer].base += this.timingBetweenLayers;\n        this.layerDelays[layer].waitTime += this.timingBetweenLayers;\n      }\n\n      // Add new layer delay time if starting new layer and not just adding\n      // to existing layer\n      // if (this.toLayers[prevLayer] !== toLayer) {\n      //   console.log(\"Adding layer time delay to layer \", layer);\n      //   this.layerDelays[layer].base += this.timingBetweenLayers;\n      //   this.layerDelays[layer].waitTime += this.timingBetweenLayers;\n      // }\n\n      // toLayers less than 4 are sorting layers that have reference elements\n      //   (pivot elements) that need to be animated first\n      if (toLayer <= 4) {\n        referenceEl = this.referenceEls[layer];\n        referenceElPathTime = this.getPathTraversalTime({\n          fromLayer: this.fromLayers[layer],\n          toLayer: toLayer,\n          val: referenceEl\n        });\n        this.layerDelays[layer].elements[referenceEl] = this.timeStagger +\n                                            this.layerDelays[layer].waitTime;\n        this.layerDelays[layer].waitTime += referenceElPathTime +\n                                              this.timeStagger;\n      }\n\n      this.fromArrays[layer].forEach((el) => {\n        // Pivot elements in the sorting layers have already had animation times\n        //   calculated and should be skipped.\n        if (toLayer <= 4 && el === referenceEl) return;\n\n        pathTime = this.getPathTraversalTime({\n          fromLayer: this.fromLayers[layer],\n          toLayer: toLayer,\n          val: el\n        });\n\n        //\n        this.layerDelays[layer].elements[el] = this.timeStagger +\n                                               this.layerDelays[layer].waitTime;\n        this.layerDelays[layer].waitTime += pathTime + this.timeStagger;\n      });\n      prevLayer = layer;\n    });\n    console.log(this.layerDelays);\n    window.layerDelays = this.layerDelays;\n  }\n\n  beginAnimations() {\n    let prevLayer = this.layers[0];\n    let prevToLayer = 1;\n    let toLayer = 1;\n\n    let $layerBrackets, $layerPlusEls, $prevLayerEls, $layerBG;\n    let layerClass, prevLayerClass;\n\n    // Render brackets and plus signs for layer 1\n    setTimeout((() => {\n      // console.log(\"toLayer: \", toLayer);\n      // console.log(this.layerDelays[prevLayer].base);\n      layerClass = this.getLayerClass(toLayer);\n      $layerBrackets = $(`.${layerClass}.${this.bracketElClass}`);\n      $layerPlusEls = $(`.${layerClass}.${this.plusElClass}`);\n      $layerBG = $(`.${layerClass}.${this.layerBackgroundClass}`);\n\n      $layerBrackets.fadeIn(this.fadeInSpeed);\n      $layerPlusEls.fadeIn(this.fadeInSpeed);\n      $layerBG.fadeIn(this.fadeInSpeed);\n    }).bind(this), this.layerDelays[prevLayer].base);\n\n    this.layers.forEach(layer => {\n      setTimeout((() => {\n        toLayer = this.toLayers[layer];\n        if (prevToLayer !== toLayer) {\n          // console.log(\"toLayer: \", toLayer);\n          // console.log(this.layerDelays[layer].base);\n          layerClass = this.getLayerClass(toLayer);\n          prevLayerClass = this.getLayerClass(prevToLayer);\n\n          $layerBrackets = $(`.${layerClass}.${this.bracketElClass}`);\n          $layerPlusEls = $(`.${layerClass}.${this.plusElClass}`);\n          $prevLayerEls = $(`.${prevLayerClass}.${this.arrayElContainerClass}` +\n                            `.${this.animateElClass}`);\n          $layerBG = $(`.${layerClass}.${this.layerBackgroundClass}`);\n\n          $layerBrackets.fadeIn(this.fadeInSpeed);\n          $layerPlusEls.fadeIn(this.fadeInSpeed);\n          $prevLayerEls.fadeIn(this.fadeInSpeed);\n          $layerBG.fadeIn(this.fadeInSpeed);\n        }\n\n        let referenceEl = this.referenceEls[layer];\n        let fromArray = this.fromArrays[layer];\n        // console.log(\"\\ntoLayer: \", toLayer);\n        // console.log(\"fromArray: \", fromArray);\n        // console.log(\"referenceEl: \", referenceEl);\n\n\n        if (toLayer <= 4) {\n          // console.log(\"\\ntoLayer: \", toLayer);\n          // console.log(\"referenceEl: \", referenceEl);\n          // console.log(\"delayTime: \", this.layerDelays[layer].elements[referenceEl]);\n          let elementDelay = this.layerDelays[layer].elements[referenceEl];\n\n          setTimeout((() => {\n            this.markActivePivot(this.fromLayers[layer], referenceEl, true);\n\n            this.createAnimation({\n              fromLayer: this.fromLayers[layer],\n              toLayer: this.toLayers[layer],\n              val: referenceEl\n            });\n          }).bind(this), elementDelay);\n\n        }\n\n        for (let i = 0; i < fromArray.length; i++) {\n          let el = fromArray[i];\n          if (toLayer <= 4 && el === referenceEl) continue;\n\n          let elementDelay = this.layerDelays[layer].elements[el];\n          let deactivateStagger = this.getPathTraversalTime({\n            fromLayer: this.fromLayers[layer],\n            toLayer: this.toLayers[layer],\n            val: el\n          });\n\n          setTimeout((() => {\n            setTimeout((() => {\n              this.markInactive(this.fromLayers[layer], el, true);\n            }).bind(this), deactivateStagger);\n\n            this.markActive(this.fromLayers[layer], el, true);\n\n            this.createAnimation({\n              fromLayer: this.fromLayers[layer],\n              toLayer: this.toLayers[layer],\n              val: el\n            });\n          }).bind(this), elementDelay);\n        }\n\n        prevToLayer = toLayer;\n      }).bind(this), this.layerDelays[layer].base);\n    });\n  }\n\n  fadeInStartLayer() {\n    console.log(\"Beginning animation of layer 0\");\n    let layer = 0;\n    // let totalTime = 0;\n\n    // console.log(`totalTime beginning: ${totalTime}`);\n\n    $(`.${this.getLayerClass(0)}.${this.layerBackgroundClass}`).fadeIn(this.fadeInSpeed);\n    $(`.${this.getLayerClass(0)}.${this.bracketElClass}`).fadeIn(this.fadeInSpeed);\n\n    setTimeout((() => {\n      // totalTime += this.timeDelay;\n      // console.log(`totalTime update: ${totalTime}`);\n      this.startArray.forEach((el, idx) => {\n        setTimeout((() => {\n          // if (idx > 0) totalTime += this.timeStagger;\n          // if (idx === this.startArray.length - 1) totalTime += this.fadeInSpeed;\n          // console.log(`totalTime update: ${totalTime}`);\n          $(`#${this.createArrayElId(layer, el, false)}`).fadeIn(this.fadeInSpeed);\n          $(`#${this.createArrayElId(layer, el, true)}`).fadeIn(this.fadeInSpeed);\n        }).bind(this), idx*this.timeStagger);\n      });\n    }).bind(this), this.timeDelay);\n\n    // console.log(`totalTime end: ${totalTime}`);\n  }\n\n  markActive(layer, val, animateable) {\n    let $targetEl = $(`#${this.createArrayElId(layer, val, animateable)}`);\n    $targetEl.addClass(this.activeElementClass);\n  }\n\n  markInactive(layer, val, animateable) {\n    let $targetEl = $(`#${this.createArrayElId(layer, val, animateable)}`);\n    $targetEl.removeClass(this.activeElementClass);\n    $targetEl.addClass(this.inactiveElementClass);\n  }\n\n  markActivePivot(layer, val, animateable) {\n    let $targetEl = $(`#${this.createArrayElId(layer, val, animateable)}`);\n    $targetEl.addClass(this.pivotElementClass);\n  }\n\n  // renders start layer\n  renderStartLayer() {\n    // Create open bracket\n    let openingBracket = this.createArrayBracket({\n      topOffset: 0,\n      leftOffset: this.leftIndent,\n      bracketType: '[',\n      layer: 0\n    });\n    this.drawingArea.append(openingBracket);\n\n    let arrayElementParams;\n\n    this.startArray.forEach((el, idx) => {\n      // Create layer 0 array elements.\n      arrayElementParams = {\n        val: el,\n        layer: 0,\n        topOffset: 0,\n        leftOffset: this.leftIndent + this.bracketWidth + idx*this.elementWidth\n      };\n      this.drawingArea.append(this.createArrayElement(arrayElementParams));\n\n      // Create layer 0 animateable elements.\n      arrayElementParams.animate = true;\n      this.drawingArea.append(this.createArrayElement(arrayElementParams));\n    });\n\n    // Create closing bracket\n    let closingBracket = this.createArrayBracket({\n      topOffset: 0,\n      leftOffset: this.leftIndent + this.numElements*this.elementWidth\n                  + this.bracketWidth,\n      bracketType: ']',\n      layer: 0\n    });\n    this.drawingArea.append(closingBracket);\n  }\n\n  renderBackgrounds() {\n    this.backgroundClasses = {\n                                0: this.colorClasses[\"lightBlue1\"],\n                                1: this.colorClasses[\"lightBlue2\"],\n                                2: this.colorClasses[\"lightBlue3\"],\n                                3: this.colorClasses[\"lightBlue4\"],\n                                4: this.colorClasses[\"lightBlue5\"],\n                                5: this.colorClasses[\"lightBlue4\"],\n                                6: this.colorClasses[\"lightBlue3\"],\n                                7: this.colorClasses[\"lightBlue2\"],\n                                8: this.colorClasses[\"lightBlue1\"],\n                              };\n\n    Object.keys(this.backgroundClasses).forEach(layer => {\n      this.drawingArea.append(this.createBackgroundLayerElement({\n        layer: layer,\n        colorClass: this.backgroundClasses[layer]\n      }));\n    });\n  }\n\n  // creates layers of elements and svg paths\n  renderLayers() {\n    this.layers.forEach((layer, idx) => {\n      console.log(`rendering layer ${idx}: ${layer}`);\n      let renderOptions = {\n        fromArray: this.fromArrays[layer],\n        fromLayer: this.fromLayers[layer],\n        toLayer: this.toLayers[layer],\n        sectionCharString: this.sectionCharStrings[layer],\n        referenceEl: this.referenceEls[layer],\n        topOffset: this.toLayers[layer] * this.elementHeight,\n        layerLeftOffset: this.computeLayerLeftOffset(\n          this.sectionCharStrings[layer],\n          this.referenceEls[layer],\n          this.customOffset[layer]\n        )\n      };\n      // if (layer === 'L6-right-r') debugger\n      this.renderSection(renderOptions);\n      renderOptions.animate = true;\n      this.renderSection(renderOptions);\n\n      this.createPaths(renderOptions);\n    });\n\n  }\n\n  // test function to make sure all animations work\n  animateLayers() {\n    this.layers.forEach((layer, idx) => {\n      let referenceEl = this.referenceEls[layer];\n      let fromArray = this.fromArrays[layer];\n\n      this.createAnimation({\n        fromLayer: this.fromLayers[layer],\n        toLayer: this.toLayers[layer],\n        val: referenceEl\n      });\n\n      fromArray.forEach(el => {\n        if (el === referenceEl) return;\n        this.createAnimation({\n          fromLayer: this.fromLayers[layer],\n          toLayer: this.toLayers[layer],\n          val: el\n        });\n      });\n    });\n  }\n\n  // Compute left offset for a section of elements\n  // Takes the inputs:\n  //   sectionCharString: string representation of new elements including +, []\n  //   referenceEl: value of element at which the spacing is based on,\n  //                will stop adding element widths when referenceEl is reached,\n  //                ignored if referenceLayer is provided\n  //   referenceLayer: (optional) hash containing a \"dir\" key that is +- 1,\n  //                   used for computing offsets in the merging layers,\n  computeLayerLeftOffset(sectionCharString, referenceEl, referenceLayer) {\n    let sectionChars = referenceLayer ? referenceLayer[\"offsetChars\"].split(\"\")\n                                      : sectionCharString.split(\"\");\n    let currentChar;\n    let leftOffset = 0;\n\n    for (let i = 0; i < sectionChars.length; i++) {\n      currentChar = sectionChars[i];\n\n      if (currentChar === String(referenceEl) && !referenceLayer) break;\n      else if ([ '[', ']' ].includes(currentChar))\n        leftOffset += this.bracketWidth;\n      else if (currentChar === '+') leftOffset += this.plusWidth;\n      else if (currentChar === ' ') leftOffset += this.spaceWidth;\n      else if (!isNaN(currentChar)) leftOffset += this.elementWidth;\n      else throw `Error in computeLeftOffset: received ${currentChar}`;\n    }\n\n    if (referenceLayer) return referenceLayer[\"dir\"] * leftOffset;\n    return -1*leftOffset;\n  }\n\n\n  // Renders a section of a layer\n  // Takes an options object with the keys:\n  //     fromArray, fromLayer, toLayer, sectionCharString, layerLeftOffset,\n  //     topOffset, referenceEl\n  renderSection(options) {\n    let prevElements = {};\n\n    options.fromArray.forEach(el => {\n      prevElements[el] = $(`#${this.createArrayElId(options.fromLayer, el)}`);\n    });\n    let referenceEl = prevElements[options.referenceEl];\n\n    let sectionChars = options.sectionCharString.split(\"\");\n    let layerLeftOffset = parseInt(referenceEl.css(\"left\")) +\n                          options.layerLeftOffset;\n    let topOffset = options.topOffset;\n\n    sectionChars.forEach(char => {\n      if (char === '[' || char === ']') {\n        this.drawingArea.append(this.createArrayBracket({\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset,\n          bracketType: char,\n          layer: options.toLayer\n        }));\n        layerLeftOffset += this.bracketWidth;\n      } else if (char === '+') {\n        this.drawingArea.append(this.createPlusSign({\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset,\n          layer: options.toLayer\n        }));\n        layerLeftOffset += this.plusWidth;\n      } else if (char === ' ') {\n        this.drawingArea.append(this.createSpaceEl({\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset,\n          layer: options.toLayer\n        }));\n        layerLeftOffset += this.spaceWidth;\n      }\n      else { // must be an array element at this point\n        let newEl = this.createArrayElement({\n          layer: options.toLayer,\n          val: parseInt(char),\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset,\n          animate: options.animate\n        });\n        // console.log(`Created ${newEl.attr('id')}`);\n        this.drawingArea.append(newEl);\n        layerLeftOffset += this.elementWidth;\n      }\n    });\n  }\n\n\n  // Renders a set of a paths\n  // Takes an options object with the keys:\n  //     fromArray, fromLayer, toLayer, sectionCharString, layerLeftOffset,\n  //     referenceEl\n  createPaths(options) {\n    let prevElements = {};\n\n    options.fromArray.forEach(el => {\n      prevElements[el] = $(`#${this.createArrayElId(options.fromLayer, el)}`);\n    });\n\n    let sectionChars = options.sectionCharString.split(\"\");\n    let prevRef = prevElements[options.referenceEl];\n    let layerLeftOffset = parseInt(prevRef.css(\"left\")) +\n                          options.layerLeftOffset;\n\n    let prevLeft, prevElement, horizontalShift, verticalShift, xStart, yStart;\n    verticalShift = (options.toLayer - options.fromLayer) *\n                     this.elementHeight;\n\n    sectionChars.forEach(char => {\n      if (char === '[' || char === ']') {\n        layerLeftOffset += this.bracketWidth;\n      } else if (char === '+') {\n        layerLeftOffset += this.plusWidth;\n      } else if (char === ' ') {\n        layerLeftOffset += this.spaceWidth;\n      }\n      else { // must be an array element at this point\n        prevElement = prevElements[parseInt(char)];\n        xStart = parseInt(prevElement.css(\"left\"));\n        horizontalShift = layerLeftOffset - xStart;\n\n        yStart = parseInt(prevElement.css(\"top\"));\n\n\n        this.createSvgPath({\n          fromLayer: options.fromLayer,\n          toLayer: options.toLayer,\n          val: parseInt(char),\n          xStart: 0,\n          yStart: 0,\n          verticalShift: verticalShift,\n          horizontalShift: horizontalShift\n        });\n        layerLeftOffset += this.elementWidth;\n      }\n    });\n  }\n\n}\n\n\nmodule.exports = Quicksort;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/quicksort.js","import anime from 'animejs';\n\nclass AnimationOptions {\n  constructor(options) {\n    this.visAreaId = options.visAreaId;\n    this.algorithmTitle = $(`#${options.algorithmTitleId}`);\n    this.drawingArea = $(`#${options.drawingAreaId}`);\n    this.arrayElContainerClass = options.arrayElContainerClass;\n    this.pathContainer = $(`#${options.svgPathContainerId}`);\n    this.arrayElClass = options.arrayElClass;\n    this.bracketElClass = options.bracketElClass;\n    this.animateElClass = options.animateElClass;\n    this.stationaryElClass = options.stationaryElClass;\n    this.plusElClass = options.plusElClass;\n    this.spaceElClass = options.spaceElClass;\n    this.layerBackgroundClass = options.layerBackgroundClass;\n    this.activeElementClass = options.activeElementClass;\n    this.inactiveElementClass = options.inactiveElementClass;\n    this.pivotElementClass = options.pivotElementClass;\n\n    this.pivotColor = options.pivotColor;\n    this.pathColor = options.pathColor;  // only time !== none is for testing\n    this.pathWidth = options.pathWidth;  // just for testing\n\n    this.elementHeightFactor = options.elementHeightFactor;\n    this.elementWidthFactor = options.elementWidthFactor;\n    this.elementRadiusFactor = options.elementRadiusFactor;\n    this.fontSizeFactor = options.fontSizeFactor;\n\n    this.calibrateSizings();\n\n    this.plusSize = this.fontSize;\n    this.plusWidth = Math.floor(this.elementWidth*0.5);\n    this.plusHeight = this.elementHeight;\n\n    this.spaceWidth = Math.floor(this.elementWidth*0.25);\n    this.spaceHeight = this.elementHeight;\n\n    this.animationSpeed = this.configureAnimationSpeed();\n\n    this.colorClasses = options.colorClasses;\n    // this.printOptions(options);\n    this.bindMethodsToWindow();   // for testing\n  }\n\n  // for testing\n  bindMethodsToWindow() {\n      window.animateElClass = this.animateElClass;\n      window.arrayElContainerClass = this.arrayElContainerClass;\n\n      window.createPathId = this.createPathId;\n      window.createArrayElId = this.createArrayElId;\n      window.createArrayElClass = this.createArrayElClass;\n      window.getPathTraversalTime = this.getPathTraversalTime.bind(this);\n  }\n\n  // for testing\n  printOptions(options) {\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach(optionKey => {\n      console.log(`${optionKey}: ${options[optionKey]}`);\n    });\n  }\n\n  configureAnimationSpeed() {\n    let areaWidth = parseInt(this.drawingArea.css(\"width\"));\n    return ((2850 - areaWidth)/(950/3));\n  }\n\n  calibrateSizings() {\n    let visAreaHeight = $(`#${this.visAreaId}`).height();\n\n    this.elementHeight = Math.floor(this.elementHeightFactor * visAreaHeight);\n    this.elementWidth = Math.floor(this.elementWidthFactor *\n                                    parseInt(this.drawingArea.css(\"width\")));\n    this.elementRadius = Math.min(\n      Math.floor(this.elementRadiusFactor * this.elementHeight),\n      Math.floor(this.elementRadiusFactor * this.elementWidth)\n    );\n    this.fontSize = Math.min(\n      Math.floor(this.fontSizeFactor * this.elementHeight),\n      Math.floor(this.fontSizeFactor * this.elementWidth)\n    );\n\n    this.bracketSize = Math.floor(this.elementRadius * 2 * 1.3);\n\n    this.bracketWidth = Math.floor(this.elementWidth/3);\n    this.bracketHeight = this.elementHeight;\n    this.bracketTopOffsetAdjustment = Math.ceil(-0.05*this.bracketSize);\n  }\n\n  createPathId(fromLayer, toLayer, val) {\n    return `path-l${fromLayer}-l${toLayer}-v${val}`;\n  }\n\n  getLayerClass(layer) {\n    return `l${layer}`;\n  }\n\n  createArrayElId(layer, val, animateable) {\n    let idName = `layer-${layer}-v${val}`;\n    if (animateable) idName += `-${this.animateElClass}`;\n    else idName += `-${this.stationaryElClass}`;\n    return idName;\n  }\n\n  createArrayElClass(layer, animateable) {\n    let className = `${this.arrayElContainerClass} l${layer}`;\n    if (animateable) className += ` ${this.animateElClass}`;\n    else className += ` ${this.stationaryElClass}`;\n    return className;\n  }\n\n  createBracketClass(layer) {\n    return `${this.bracketElClass} l${layer}`;\n  }\n\n  createPlusClass(layer) {\n    return `${this.plusElClass} l${layer}`;\n  }\n\n  createSpaceClass(layer) {\n    return `${this.spaceElClass} l${layer}`;\n  }\n\n  createBackgroundClass(layer) {\n    return `${this.layerBackgroundClass} l${layer}`;\n  }\n\n  createBackgroundLayerElement(options) {\n    let backgroundOptions = {\n      class: `${this.createBackgroundClass(options.layer)} ` +\n             `${options.colorClass}`,\n      height: this.elementHeight\n    };\n\n    let $bg = $(\"<div>\", backgroundOptions);\n    $bg.offset({top: options.layer*this.elementHeight});\n    return $bg;\n  }\n\n  // Creates div element with array element inside.\n  // Requires options object containing:\n  //   layer, val, topOffset, leftOffset\n  //   ***optional keys: idName, className, animate\n  createArrayElement(options) {\n    // Create container for element that is positioned absolute to the drawing\n    //   area and display:flex to center the array element div.\n    let idName = options.idName || this.createArrayElId(options.layer,\n                                                        options.val,\n                                                        options.animate);\n    let className = options.className || this.createArrayElClass(options.layer,\n                                                                 options.animate);\n\n    let containerParams = {\n      class: className,\n      id: idName,\n      width: this.elementWidth,\n      height: this.elementHeight\n    };\n\n    let $arrayElCont = $(\"<div>\", containerParams);\n    $arrayElCont.offset({\n      top: options.topOffset,\n      left: options.leftOffset\n    });\n\n    // Create circular div to house the <p> tag with the element value.\n    // display:flex to center the <p> elementthis.bracketSize.\n    let elementParams = {\n      class: this.arrayElClass,\n      width: this.elementRadius*2,\n      height: this.elementRadius*2,\n    };\n    let $element = $(\"<div>\", elementParams);\n    $element.width(this.elementRadius*2);\n    $element.height(this.elementRadius*2);\n\n    // Create <p> tag with element value\n    let textParams = {\n      style: `font-size:${this.fontSize}px`\n    };\n    let $p = $(\"<p>\", textParams);\n    $p.html(options.val);\n\n    // Append <p> tag to circular div and circular div to the element container.\n    $element.append($p);\n    $arrayElCont.append($element);\n\n    return $arrayElCont;\n  }\n\n  // Creates svg element with path element inside.\n  // Requires options object containing:\n  //   fromLayer, toLayer, val, xStart, yStart\n  //   ***optional keys: verticalShift, horizontalShift\n  // Returns <svg><path ></svg>\n  createSvgPath(options) {\n    let idName = options.idName || this.createPathId(options.fromLayer,\n                                                     options.toLayer,\n                                                     options.val);\n    let verticalShift = options.verticalShift || 0;\n    let horizontalShift = options.horizontalShift || 0;\n\n    let pathParams = {\n      fill: \"none\",\n      stroke: this.pathColor,\n      \"stroke-width\": this.strokeWidth,\n      id: idName,\n      d: `M${options.xStart},${options.yStart} ` +\n         `v${verticalShift} h${horizontalShift}`\n    };\n\n    // if (horizontalShift !== 0) {\n    //   pathParams.d += ` h15 h-30 h25 h-20 h10`;\n    // }\n\n    let $path = $(\"<path>\", pathParams);\n    this.pathContainer.append($path);\n  }\n\n  // Creates animejs animation\n  // Requires options object with the keys:\n  //     pathIdName, animeTarget, duration, val\n  createAnimation(options) {\n    let pathId = `#${this.createPathId(options.fromLayer, options.toLayer,\n                     options.val)}`;\n    let myPath = anime.path(pathId);\n    let pathLength = parseInt(myPath.path.getTotalLength());\n    // let duration = options.duration ||\n    //                parseInt(pathLength * this.animationSpeed);\n    let duration = options.duration || this.getPathTraversalTime(options);\n\n    let targetId = `#${this.createArrayElId(options.fromLayer, options.val, true)}`;\n\n    anime({\n      targets: targetId,\n      translateX: myPath,\n      translateY: myPath,\n      duration: duration,\n      loop: false,\n      easing: 'easeInOutExpo'\n      // easing: 'easeOutExpo'\n    });\n  }\n\n  // Gets path traversal time of an svg path\n  // Requires options object with the keys:\n  //    fromLayer, toLayer, val\n  getPathTraversalTime(options) {\n    let pathId = `#${this.createPathId(options.fromLayer, options.toLayer,\n                     options.val)}`;\n    let myPath = anime.path(pathId);\n    let pathLength = parseInt(myPath.path.getTotalLength());\n    let duration = parseInt(pathLength * this.animationSpeed);\n    return duration;\n  }\n\n  // Create div containing an array bracket.\n  // Takes an options object with the keys:\n  //       topOffset, leftOffset, bracketType, layer\n  createArrayBracket(options) {\n    let $bracketContainer = $(\"<div>\", {\n      height: this.bracketHeight,\n      width: this.bracketWidth,\n      class: this.createBracketClass(options.layer)\n    });\n\n    $bracketContainer.offset({\n      top: Math.floor(options.topOffset + this.bracketTopOffsetAdjustment),\n      left: Math.floor(options.leftOffset)\n    });\n\n    let $p = $(\"<p>\", { style: `font-size:${this.bracketSize}px` });\n    $p.html(options.bracketType);\n    $bracketContainer.append($p);\n    return $bracketContainer;\n  }\n\n  // Create div containing a plus sign.\n  // Takes an options object with the keys:\n  //       topOffset, leftOffset, layer\n  createPlusSign(options) {\n    let $plusContainer = $(\"<div>\", {\n      height: this.plusHeight,\n      width: this.plusWidth,\n      class: this.createPlusClass(options.layer)\n    });\n\n    $plusContainer.offset({\n      top: Math.floor(options.topOffset),\n      left: Math.floor(options.leftOffset)\n    });\n\n    let $p = $(\"<p>\", { style: `font-size:${this.plusSize}px` });\n    $p.html('+');\n    $plusContainer.append($p);\n    return $plusContainer;\n  }\n\n  createSpaceEl(options) {\n    let $spaceContainer = $(\"<div>\", {\n      height: this.spaceHeight,\n      width: this.spaceWidth,\n      class: this.createSpaceClass(options.layer)\n    });\n\n    $spaceContainer.offset({\n      top: Math.floor(options.topOffset),\n      left: Math.floor(options.leftOffset)\n    });\n\n    let $p = $(\"<p>\", { style: `font-size:${this.plusSize}px` });\n    $p.html(' ');\n    $spaceContainer.append($p);\n    return $spaceContainer;\n  }\n\n  calculateLeftIndent() {\n    let vizAreaWidth = $(`#${this.visAreaId}`).width();\n    let startSpaceOccupied = this.numElements * this.elementWidth +\n                             2 * this.bracketWidth;\n    let leftIndent = Math.floor((vizAreaWidth - startSpaceOccupied)/2);\n    return leftIndent;\n  }\n\n}\n\nmodule.exports = AnimationOptions;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/animation_options.js","/*\n * Anime v1.1.1\n * http://anime-js.com\n * JavaScript animation engine\n * Copyright (c) 2016 Julian Garnier\n * http://juliangarnier.com\n * Released under the MIT license\n */\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.anime = factory();\n  }\n}(this, function () {\n\n  var version = '1.1.1';\n\n  // Defaults\n\n  var defaultSettings = {\n    duration: 1000,\n    delay: 0,\n    loop: false,\n    autoplay: true,\n    direction: 'normal',\n    easing: 'easeOutElastic',\n    elasticity: 400,\n    round: false,\n    begin: undefined,\n    update: undefined,\n    complete: undefined\n  }\n\n  // Transforms\n\n  var validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skewX', 'skewY'];\n  var transform, transformStr = 'transform';\n\n  // Utils\n\n  var is = {\n    arr: function(a) { return Array.isArray(a) },\n    obj: function(a) { return Object.prototype.toString.call(a).indexOf('Object') > -1 },\n    svg: function(a) { return a instanceof SVGElement },\n    dom: function(a) { return a.nodeType || is.svg(a) },\n    num: function(a) { return !isNaN(parseInt(a)) },\n    str: function(a) { return typeof a === 'string' },\n    fnc: function(a) { return typeof a === 'function' },\n    und: function(a) { return typeof a === 'undefined' },\n    nul: function(a) { return typeof a === 'null' },\n    hex: function(a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a) },\n    rgb: function(a) { return /^rgb/.test(a) },\n    hsl: function(a) { return /^hsl/.test(a) },\n    col: function(a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)) }\n  }\n\n  // Easings functions adapted from http://jqueryui.com/\n\n  var easings = (function() {\n    var eases = {};\n    var names = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n    var functions = {\n      Sine: function(t) { return 1 - Math.cos( t * Math.PI / 2 ); },\n      Circ: function(t) { return 1 - Math.sqrt( 1 - t * t ); },\n      Elastic: function(t, m) {\n        if( t === 0 || t === 1 ) return t;\n        var p = (1 - Math.min(m, 998) / 1000), st = t / 1, st1 = st - 1, s = p / ( 2 * Math.PI ) * Math.asin( 1 );\n        return -( Math.pow( 2, 10 * st1 ) * Math.sin( ( st1 - s ) * ( 2 * Math.PI ) / p ) );\n      },\n      Back: function(t) { return t * t * ( 3 * t - 2 ); },\n      Bounce: function(t) {\n        var pow2, bounce = 4;\n        while ( t < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}\n        return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - t, 2 );\n      }\n    }\n    names.forEach(function(name, i) {\n      functions[name] = function(t) {\n        return Math.pow( t, i + 2 );\n      }\n    });\n    Object.keys(functions).forEach(function(name) {\n      var easeIn = functions[name];\n      eases['easeIn' + name] = easeIn;\n      eases['easeOut' + name] = function(t, m) { return 1 - easeIn(1 - t, m); };\n      eases['easeInOut' + name] = function(t, m) { return t < 0.5 ? easeIn(t * 2, m) / 2 : 1 - easeIn(t * -2 + 2, m) / 2; };\n      eases['easeOutIn' + name] = function(t, m) { return t < 0.5 ? (1 - easeIn(1 - 2 * t, m)) / 2 : (easeIn(t * 2 - 1, m) + 1) / 2; };\n    });\n    eases.linear = function(t) { return t; };\n    return eases;\n  })();\n\n  // Strings\n\n  var numberToString = function(val) {\n    return (is.str(val)) ? val : val + '';\n  }\n\n  var stringToHyphens = function(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  var selectString = function(str) {\n    if (is.col(str)) return false;\n    try {\n      var nodes = document.querySelectorAll(str);\n      return nodes;\n    } catch(e) {\n      return false;\n    }\n  }\n\n  // Numbers\n\n  var random = function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  // Arrays\n\n  var flattenArray = function(arr) {\n    return arr.reduce(function(a, b) {\n      return a.concat(is.arr(b) ? flattenArray(b) : b);\n    }, []);\n  }\n\n  var toArray = function(o) {\n    if (is.arr(o)) return o;\n    if (is.str(o)) o = selectString(o) || o;\n    if (o instanceof NodeList || o instanceof HTMLCollection) return [].slice.call(o);\n    return [o];\n  }\n\n  var arrayContains = function(arr, val) {\n    return arr.some(function(a) { return a === val; });\n  }\n\n  var groupArrayByProps = function(arr, propsArr) {\n    var groups = {};\n    arr.forEach(function(o) {\n      var group = JSON.stringify(propsArr.map(function(p) { return o[p]; }));\n      groups[group] = groups[group] || [];\n      groups[group].push(o);\n    });\n    return Object.keys(groups).map(function(group) {\n      return groups[group];\n    });\n  }\n\n  var removeArrayDuplicates = function(arr) {\n    return arr.filter(function(item, pos, self) {\n      return self.indexOf(item) === pos;\n    });\n  }\n\n  // Objects\n\n  var cloneObject = function(o) {\n    var newObject = {};\n    for (var p in o) newObject[p] = o[p];\n    return newObject;\n  }\n\n  var mergeObjects = function(o1, o2) {\n    for (var p in o2) o1[p] = !is.und(o1[p]) ? o1[p] : o2[p];\n    return o1;\n  }\n\n  // Colors\n\n  var hexToRgb = function(hex) {\n    var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    var hex = hex.replace(rgx, function(m, r, g, b) { return r + r + g + g + b + b; });\n    var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    var r = parseInt(rgb[1], 16);\n    var g = parseInt(rgb[2], 16);\n    var b = parseInt(rgb[3], 16);\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  }\n\n  var hslToRgb = function(hsl) {\n    var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hsl);\n    var h = parseInt(hsl[1]) / 360;\n    var s = parseInt(hsl[2]) / 100;\n    var l = parseInt(hsl[3]) / 100;\n    var hue2rgb = function(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n    var r, g, b;\n    if (s == 0) {\n      r = g = b = l;\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n    return 'rgb(' + r * 255 + ',' + g * 255 + ',' + b * 255 + ')';\n  }\n\n  var colorToRgb = function(val) {\n    if (is.rgb(val)) return val;\n    if (is.hex(val)) return hexToRgb(val);\n    if (is.hsl(val)) return hslToRgb(val);\n  }\n\n  // Units\n\n  var getUnit = function(val) {\n    return /([\\+\\-]?[0-9|auto\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg)?/.exec(val)[2];\n  }\n\n  var addDefaultTransformUnit = function(prop, val, intialVal) {\n    if (getUnit(val)) return val;\n    if (prop.indexOf('translate') > -1) return getUnit(intialVal) ? val + getUnit(intialVal) : val + 'px';\n    if (prop.indexOf('rotate') > -1 || prop.indexOf('skew') > -1) return val + 'deg';\n    return val;\n  }\n\n  // Values\n\n  var getCSSValue = function(el, prop) {\n    // First check if prop is a valid CSS property\n    if (prop in el.style) {\n      // Then return the property value or fallback to '0' when getPropertyValue fails\n      return getComputedStyle(el).getPropertyValue(stringToHyphens(prop)) || '0';\n    }\n  }\n\n  var getTransformValue = function(el, prop) {\n    var defaultVal = prop.indexOf('scale') > -1 ? 1 : 0;\n    var str = el.style.transform;\n    if (!str) return defaultVal;\n    var rgx = /(\\w+)\\((.+?)\\)/g;\n    var match = [];\n    var props = [];\n    var values = [];\n    while (match = rgx.exec(str)) {\n      props.push(match[1]);\n      values.push(match[2]);\n    }\n    var val = values.filter(function(f, i) { return props[i] === prop; });\n    return val.length ? val[0] : defaultVal;\n  }\n\n  var getAnimationType = function(el, prop) {\n    if ( is.dom(el) && arrayContains(validTransforms, prop)) return 'transform';\n    if ( is.dom(el) && (el.getAttribute(prop) || (is.svg(el) && el[prop]))) return 'attribute';\n    if ( is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) return 'css';\n    if (!is.nul(el[prop]) && !is.und(el[prop])) return 'object';\n  }\n\n  var getInitialTargetValue = function(target, prop) {\n    switch (getAnimationType(target, prop)) {\n      case 'transform': return getTransformValue(target, prop);\n      case 'css': return getCSSValue(target, prop);\n      case 'attribute': return target.getAttribute(prop);\n    }\n    return target[prop] || 0;\n  }\n\n  var getValidValue = function(values, val, originalCSS) {\n    if (is.col(val)) return colorToRgb(val);\n    if (getUnit(val)) return val;\n    var unit = getUnit(values.to) ? getUnit(values.to) : getUnit(values.from);\n    if (!unit && originalCSS) unit = getUnit(originalCSS);\n    return unit ? val + unit : val;\n  }\n\n  var decomposeValue = function(val) {\n    var rgx = /-?\\d*\\.?\\d+/g;\n    return {\n      original: val,\n      numbers: numberToString(val).match(rgx) ? numberToString(val).match(rgx).map(Number) : [0],\n      strings: numberToString(val).split(rgx)\n    }\n  }\n\n  var recomposeValue = function(numbers, strings, initialStrings) {\n    return strings.reduce(function(a, b, i) {\n      var b = (b ? b : initialStrings[i - 1]);\n      return a + numbers[i - 1] + b;\n    });\n  }\n\n  // Animatables\n\n  var getAnimatables = function(targets) {\n    var targets = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n    return targets.map(function(t, i) {\n      return { target: t, id: i };\n    });\n  }\n\n  // Properties\n\n  var getProperties = function(params, settings) {\n    var props = [];\n    for (var p in params) {\n      if (!defaultSettings.hasOwnProperty(p) && p !== 'targets') {\n        var prop = is.obj(params[p]) ? cloneObject(params[p]) : {value: params[p]};\n        prop.name = p;\n        props.push(mergeObjects(prop, settings));\n      }\n    }\n    return props;\n  }\n\n  var getPropertiesValues = function(target, prop, value, i) {\n    var values = toArray( is.fnc(value) ? value(target, i) : value);\n    return {\n      from: (values.length > 1) ? values[0] : getInitialTargetValue(target, prop),\n      to: (values.length > 1) ? values[1] : values[0]\n    }\n  }\n\n  // Tweens\n\n  var getTweenValues = function(prop, values, type, target) {\n    var valid = {};\n    if (type === 'transform') {\n      valid.from = prop + '(' + addDefaultTransformUnit(prop, values.from, values.to) + ')';\n      valid.to = prop + '(' + addDefaultTransformUnit(prop, values.to) + ')';\n    } else {\n      var originalCSS = (type === 'css') ? getCSSValue(target, prop) : undefined;\n      valid.from = getValidValue(values, values.from, originalCSS);\n      valid.to = getValidValue(values, values.to, originalCSS);\n    }\n    return { from: decomposeValue(valid.from), to: decomposeValue(valid.to) };\n  }\n\n  var getTweensProps = function(animatables, props) {\n    var tweensProps = [];\n    animatables.forEach(function(animatable, i) {\n      var target = animatable.target;\n      return props.forEach(function(prop) {\n        var animType = getAnimationType(target, prop.name);\n        if (animType) {\n          var values = getPropertiesValues(target, prop.name, prop.value, i);\n          var tween = cloneObject(prop);\n          tween.animatables = animatable;\n          tween.type = animType;\n          tween.from = getTweenValues(prop.name, values, tween.type, target).from;\n          tween.to = getTweenValues(prop.name, values, tween.type, target).to;\n          tween.round = (is.col(values.from) || tween.round) ? 1 : 0;\n          tween.delay = (is.fnc(tween.delay) ? tween.delay(target, i, animatables.length) : tween.delay) / animation.speed;\n          tween.duration = (is.fnc(tween.duration) ? tween.duration(target, i, animatables.length) : tween.duration) / animation.speed;\n          tweensProps.push(tween);\n        }\n      });\n    });\n    return tweensProps;\n  }\n\n  var getTweens = function(animatables, props) {\n    var tweensProps = getTweensProps(animatables, props);\n    var splittedProps = groupArrayByProps(tweensProps, ['name', 'from', 'to', 'delay', 'duration']);\n    return splittedProps.map(function(tweenProps) {\n      var tween = cloneObject(tweenProps[0]);\n      tween.animatables = tweenProps.map(function(p) { return p.animatables });\n      tween.totalDuration = tween.delay + tween.duration;\n      return tween;\n    });\n  }\n\n  var reverseTweens = function(anim, delays) {\n    anim.tweens.forEach(function(tween) {\n      var toVal = tween.to;\n      var fromVal = tween.from;\n      var delayVal = anim.duration - (tween.delay + tween.duration);\n      tween.from = toVal;\n      tween.to = fromVal;\n      if (delays) tween.delay = delayVal;\n    });\n    anim.reversed = anim.reversed ? false : true;\n  }\n\n  var getTweensDuration = function(tweens) {\n    if (tweens.length) return Math.max.apply(Math, tweens.map(function(tween){ return tween.totalDuration; }));\n  }\n\n  // will-change\n\n  var getWillChange = function(anim) {\n    var props = [];\n    var els = [];\n    anim.tweens.forEach(function(tween) {\n      if (tween.type === 'css' || tween.type === 'transform' ) {\n        props.push(tween.type === 'css' ? stringToHyphens(tween.name) : 'transform');\n        tween.animatables.forEach(function(animatable) { els.push(animatable.target); });\n      }\n    });\n    return {\n      properties: removeArrayDuplicates(props).join(', '),\n      elements: removeArrayDuplicates(els)\n    }\n  }\n\n  var setWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.willChange = willChange.properties;\n    });\n  }\n\n  var removeWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.removeProperty('will-change');\n    });\n  }\n\n  /* Svg path */\n\n  var getPathProps = function(path) {\n    var el = is.str(path) ? selectString(path)[0] : path;\n    return {\n      path: el,\n      value: el.getTotalLength()\n    }\n  }\n\n  var snapProgressToPath = function(tween, progress) {\n    var pathEl = tween.path;\n    var pathProgress = tween.value * progress;\n    var point = function(offset) {\n      var o = offset || 0;\n      var p = progress > 1 ? tween.value + o : pathProgress + o;\n      return pathEl.getPointAtLength(p);\n    }\n    var p = point();\n    var p0 = point(-1);\n    var p1 = point(+1);\n    switch (tween.name) {\n      case 'translateX': return p.x;\n      case 'translateY': return p.y;\n      case 'rotate': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n    }\n  }\n\n  // Progress\n\n  var getTweenProgress = function(tween, time) {\n    var elapsed = Math.min(Math.max(time - tween.delay, 0), tween.duration);\n    var percent = elapsed / tween.duration;\n    var progress = tween.to.numbers.map(function(number, p) {\n      var start = tween.from.numbers[p];\n      var eased = easings[tween.easing](percent, tween.elasticity);\n      var val = tween.path ? snapProgressToPath(tween, eased) : start + eased * (number - start);\n      val = tween.round ? Math.round(val * tween.round) / tween.round : val;\n      return val;\n    });\n    return recomposeValue(progress, tween.to.strings, tween.from.strings);\n  }\n\n  var setAnimationProgress = function(anim, time) {\n    var transforms;\n    anim.currentTime = time;\n    anim.progress = (time / anim.duration) * 100;\n    for (var t = 0; t < anim.tweens.length; t++) {\n      var tween = anim.tweens[t];\n      tween.currentValue = getTweenProgress(tween, time);\n      var progress = tween.currentValue;\n      for (var a = 0; a < tween.animatables.length; a++) {\n        var animatable = tween.animatables[a];\n        var id = animatable.id;\n        var target = animatable.target;\n        var name = tween.name;\n        switch (tween.type) {\n          case 'css': target.style[name] = progress; break;\n          case 'attribute': target.setAttribute(name, progress); break;\n          case 'object': target[name] = progress; break;\n          case 'transform':\n          if (!transforms) transforms = {};\n          if (!transforms[id]) transforms[id] = [];\n          transforms[id].push(progress);\n          break;\n        }\n      }\n    }\n    if (transforms) {\n      if (!transform) transform = (getCSSValue(document.body, transformStr) ? '' : '-webkit-') + transformStr;\n      for (var t in transforms) {\n        anim.animatables[t].target.style[transform] = transforms[t].join(' ');\n      }\n    }\n    if (anim.settings.update) anim.settings.update(anim);\n  }\n\n  // Animation\n\n  var createAnimation = function(params) {\n    var anim = {};\n    anim.animatables = getAnimatables(params.targets);\n    anim.settings = mergeObjects(params, defaultSettings);\n    anim.properties = getProperties(params, anim.settings);\n    anim.tweens = getTweens(anim.animatables, anim.properties);\n    anim.duration = getTweensDuration(anim.tweens) || params.duration;\n    anim.currentTime = 0;\n    anim.progress = 0;\n    anim.ended = false;\n    return anim;\n  }\n\n  // Public\n\n  var animations = [];\n  var raf = 0;\n\n  var engine = (function() {\n    var play = function() { raf = requestAnimationFrame(step); };\n    var step = function(t) {\n      if (animations.length) {\n        for (var i = 0; i < animations.length; i++) animations[i].tick(t);\n        play();\n      } else {\n        cancelAnimationFrame(raf);\n        raf = 0;\n      }\n    }\n    return play;\n  })();\n\n  var animation = function(params) {\n\n    var anim = createAnimation(params);\n    var time = {};\n\n    anim.tick = function(now) {\n      anim.ended = false;\n      if (!time.start) time.start = now;\n      time.current = Math.min(Math.max(time.last + now - time.start, 0), anim.duration);\n      setAnimationProgress(anim, time.current);\n      var s = anim.settings;\n      if (s.begin && time.current >= s.delay) { s.begin(anim); s.begin = undefined; };\n      if (time.current >= anim.duration) {\n        if (s.loop) {\n          time.start = now;\n          if (s.direction === 'alternate') reverseTweens(anim, true);\n          if (is.num(s.loop)) s.loop--;\n        } else {\n          anim.ended = true;\n          anim.pause();\n          if (s.complete) s.complete(anim);\n        }\n        time.last = 0;\n      }\n    }\n\n    anim.seek = function(progress) {\n      setAnimationProgress(anim, (progress / 100) * anim.duration);\n    }\n\n    anim.pause = function() {\n      removeWillChange(anim);\n      var i = animations.indexOf(anim);\n      if (i > -1) animations.splice(i, 1);\n    }\n\n    anim.play = function(params) {\n      anim.pause();\n      if (params) anim = mergeObjects(createAnimation(mergeObjects(params, anim.settings)), anim);\n      time.start = 0;\n      time.last = anim.ended ? 0 : anim.currentTime;\n      var s = anim.settings;\n      if (s.direction === 'reverse') reverseTweens(anim);\n      if (s.direction === 'alternate' && !s.loop) s.loop = 1;\n      setWillChange(anim);\n      animations.push(anim);\n      if (!raf) engine();\n    }\n\n    anim.restart = function() {\n      if (anim.reversed) reverseTweens(anim);\n      anim.pause();\n      anim.seek(0);\n      anim.play();\n    }\n\n    if (anim.settings.autoplay) anim.play();\n\n    return anim;\n\n  }\n\n  // Remove one or multiple targets from all active animations.\n\n  var remove = function(elements) {\n    var targets = flattenArray(is.arr(elements) ? elements.map(toArray) : toArray(elements));\n    for (var i = animations.length-1; i >= 0; i--) {\n      var animation = animations[i];\n      var tweens = animation.tweens;\n      for (var t = tweens.length-1; t >= 0; t--) {\n        var animatables = tweens[t].animatables;\n        for (var a = animatables.length-1; a >= 0; a--) {\n          if (arrayContains(targets, animatables[a].target)) {\n            animatables.splice(a, 1);\n            if (!animatables.length) tweens.splice(t, 1);\n            if (!tweens.length) animation.pause();\n          }\n        }\n      }\n    }\n  }\n\n  animation.version = version;\n  animation.speed = 1;\n  animation.list = animations;\n  animation.remove = remove;\n  animation.easings = easings;\n  animation.getValue = getInitialTargetValue;\n  animation.path = getPathProps;\n  animation.random = random;\n\n  return animation;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/animejs/anime.js\n// module id = 4\n// module chunks = 0","import AnimationOptions from './animation_options';\nimport anime from 'animejs';\n\n\nclass Test extends AnimationOptions {\n  constructor(options) {\n    super(options);\n    this.startArray = [5, 1, 2, 3, 7, 4, 0 , 6];\n    this.numElements = this.startArray.length;\n    this.leftIndent = this.calculateStartingLeftIndent();\n    this.bracketWidth = Math.floor(this.elementWidth * 0.2);\n    this.bracketSize = Math.floor(options.elementRadius * 2 * 1.4);\n    this.runTest2();\n  }\n\n  runTest2() {\n    let testVal = 5;\n\n    this.drawingArea.append(this.createArrayElement({\n      layer: 0,\n      val: testVal,\n      topOffset: 0,\n      leftOffset: 300,\n      animate: false\n    }));\n\n    this.drawingArea.append(this.createArrayElement({\n      layer: 0,\n      val: testVal,\n      topOffset: 0,\n      leftOffset: 300,\n      animate: true\n    }));\n\n    let animateableEl = $(`#${this.createArrayElId(0, testVal, true)}`);\n    let xStart = parseInt(animateableEl.css(\"left\"));\n\n    this.createSvgPath({\n      fromLayer: 0,\n      toLayer: 1,\n      val: testVal,\n      xStart: 0,\n      yStart: 0,\n      verticalShift: this.elementHeight,\n      horizontalShift: 0\n    });\n\n    $(\"body\").html($(\"body\").html());\n\n    this.createAnimation({\n      fromLayer: 0,\n      toLayer: 1,\n      val: testVal,\n      duration: 2000\n    });\n  }\n\n  runTest() {\n    console.log(\"running test\");\n    let $drawingArea = $(\"#drawing-area\");\n    let $testArrayElCont = $(\"<div>\", {class: \"array-element-container\",\n                                       id: \"test-source\",\n                                       width: this.elementWidth,\n                                       height: this.elementHeight});\n\n    let testDivParams = {\n      class: \"array-element\",\n      width: this.elementRadius*2,\n      height: this.elementRadius*2,\n      // style: `left:${Math.floor(this.leftIndent + this.elementWidth/2)}px;` +\n      //        `top:${Math.floor(this.elementHeight)*0}px`\n    };\n\n    let testTextParams = {\n      style: `font-size:${this.fontSize}px`\n    };\n\n    let $testElement = $(\"<div>\", testDivParams);\n    $testElement.width(this.elementRadius*2);\n    $testElement.height(this.elementRadius*2);\n    $testArrayElCont.offset({top: Math.floor(this.elementHeight)*0,\n                         left: Math.floor(this.leftIndent + this.elementWidth * 0)});\n    let $p = $(\"<p>\", testTextParams);\n    $p.html(0);\n    $testElement.append($p);\n    $testArrayElCont.append($testElement);\n\n    $drawingArea.append($testArrayElCont);\n\n    // ########################################################################################\n    let svgParams = {\n      height: 103,\n      width: 200,\n      class: \"path-container\"\n    };\n\n    let $newSvg = $(\"<svg>\", svgParams);\n\n    let xStart = 0;\n    let yStart = 0;\n\n    let pathParams = {\n      fill: \"none\",\n      stroke: \"red\",\n      \"stroke-width\": 3,\n      id: \"testPath\",\n      d: `M${xStart},${yStart} v${100} h${200}`\n    };\n\n    // pathParams.d += `M${xStart},${yStart}`;\n    // pathParams.d += ` v${options.vertical} h${options.horizontal}`;\n\n    let $path = $(\"<path>\", pathParams);\n    $newSvg.append($path);\n    $newSvg.offset({top: Math.floor(this.elementHeight/2),\n                    left: Math.floor(this.leftIndent + this.elementWidth/2)});\n    $drawingArea.append($newSvg);\n    // #########################################################################################\n    //  Move test\n    let $testmoveArrayElCont = $(\"<div>\", {class: \"array-element-container\",\n                                           id: \"test-move\",\n                                       width: this.elementWidth,\n                                       height: this.elementHeight});\n\n    let testmoveDivParams = {\n      class: \"array-element\",\n      width: this.elementRadius*2,\n      height: this.elementRadius*2,\n      // style: `left:${Math.floor(this.leftIndent + this.elementWidth/2)}px;` +\n      //        `top:${Math.floor(this.elementHeight)*0}px`\n    };\n\n    let testmoveTextParams = {\n      style: `font-size:${this.fontSize}px`\n    };\n\n    let $testmoveElement = $(\"<div>\", testmoveDivParams);\n    $testmoveElement.width(this.elementRadius*2);\n    $testmoveElement.height(this.elementRadius*2);\n    $testmoveArrayElCont.offset({top: Math.floor(this.elementHeight)*0,\n                         left: Math.floor(this.leftIndent + this.elementWidth * 0)});\n    let $pMove = $(\"<p>\", testmoveTextParams);\n    $pMove.html(0);\n    $testmoveElement.append($pMove);\n    $testmoveArrayElCont.append($testmoveElement);\n\n    $drawingArea.append($testmoveArrayElCont);\n    $(\"body\").html($(\"body\").html());\n\n\n    var myPath = anime.path(`#testPath`);\n\n    anime({\n      targets: `#test-move`,\n      translateX: myPath,\n      translateY: myPath,\n      duration: 2500,\n      loop: false,\n      easing: 'easeInOutExpo'\n    });\n\n    console.log(anime.easings);\n  }\n\n  calculateStartingLeftIndent() {\n    let vizAreaWidth = $(`#${this.visAreaId}`).width();\n    let startSpaceOccupied = this.numElements * this.elementWidth +\n                             2 * this.bracketWidth;\n    let leftIndent = Math.floor((vizAreaWidth - startSpaceOccupied)/2);\n    return leftIndent;\n  }\n}\n\nmodule.exports = Test;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/test.js"],"sourceRoot":""}