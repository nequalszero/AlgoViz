{"version":3,"sources":["webpack:///webpack/bootstrap d3d06a2ddd8b23664e64","webpack:///./lib/entry.js","webpack:///./lib/algorithm_visualization.js","webpack:///./lib/quicksort.js","webpack:///./lib/animation_options.js","webpack:///./~/animejs/anime.js","webpack:///./lib/test.js"],"names":["document","addEventListener","event","AlgorithmVisualization","sizeVisualizationArea","quickSort","windowWidth","$","window","width","OPTIONS","visAreaId","algorithmTitleId","drawingAreaId","svgPathContainerClass","arrayElContainerClass","bracketElClass","animateElClass","arrayElClass","plusElClass","pivotColor","pathColor","pathWidth","elementHeightFactor","elementWidthFactor","elementRadiusFactor","fontSizeFactor","colors","lightGreen","lightGreen2","lightBlue","lightPurple","lightOrange","lightBlue2","lightBlue3","module","exports","Quicksort","options","startArray","numElements","length","leftIndent","calculateLeftIndent","algorithmTitle","html","renderStartLayer","renderLayer1","renderLayer2","renderLayer3","renderLayer4","renderLayer5","renderLayer6","renderLayer7","renderLayer8","console","log","openingBracket","createArrayBracket","topOffset","leftOffset","bracketType","layer","drawingArea","append","arrayElementParams","forEach","el","idx","val","bracketWidth","elementWidth","createArrayElement","animate","closingBracket","prevElements","elementOffsets","fromArray","createArrayElId","fromLayer","sectionChars","sectionCharString","split","layerLeftOffset","parseInt","referenceEl","css","char","toLayer","createPlusSign","plusWidth","createSpaceEl","spaceWidth","renderOptions","elementHeight","renderSection","leftRenderOptions","rightRenderOptions","AnimationOptions","calibrateSizings","plusSize","fontSize","Math","floor","plusHeight","spaceHeight","optionKeys","Object","keys","optionKey","visAreaHeight","innerHeight","height","elementRadius","min","bracketSize","bracketHeight","bracketTopOffsetAdjustment","ceil","animateable","idName","className","createArrayElClass","containerParams","class","id","$arrayElCont","offset","top","left","elementParams","$element","textParams","style","$p","svgParams","$newSvg","createPathId","verticalShift","horizontalShift","pathParams","fill","stroke","strokeWidth","d","xStart","yStart","$path","myPath","path","pathIdName","targets","animeTarget","translateX","translateY","duration","loop","easing","$bracketContainer","createBracketClass","$plusContainer","createPlusClass","vizAreaWidth","startSpaceOccupied","Test","calculateStartingLeftIndent","runTest","$drawingArea","$testArrayElCont","testDivParams","testTextParams","$testElement","$testmoveArrayElCont","testmoveDivParams","testmoveTextParams","$testmoveElement","$pMove","easings"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,uBAAsB,0BAA0B;AAChD,uBAAsB,kEAAkE;AACxF,uBAAsB,iCAAiC;AACvD,uBAAsB,iCAAiC;AACvD,uBAAsB,6BAA6B;AACnD,uBAAsB,+BAA+B;AACrD,uBAAsB,iCAAiC;AACvD,uBAAsB,kCAAkC;AACxD,uBAAsB,6BAA6B;AACnD,uBAAsB,qBAAqB,EAAE,eAAe,EAAE,cAAc;AAC5E,uBAAsB,wBAAwB;AAC9C,uBAAsB,wBAAwB;AAC9C,uBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,wCAAwC,EAAE;AACnE,0BAAyB,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA,QAAO;AACP,0BAAyB,8BAA8B,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,iDAAgD,6BAA6B;AAC7E,mDAAkD,uEAAuE;AACzH,mDAAkD,kFAAkF;AACpI,MAAK;AACL,iCAAgC,UAAU;AAC1C;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,kBAAkB,EAAE;AACrD;;AAEA;AACA;AACA;AACA,4DAA2D,aAAa,EAAE;AAC1E;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sDAAqD,8BAA8B,EAAE;AACrF,4BAA2B,EAAE,UAAU,EAAE,UAAU,EAAE;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,0BAA0B,EAAE;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,eAAc;AACd,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uDAAsD,uBAAuB;AAC7E;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,+EAA8E,4BAA4B,EAAE;AAC5G;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,6BAA6B,EAAE;AACvF;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA,sBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD,iEAAgE;AAChE,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA2B,mCAAmC;AAC9D;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,eAAe,qBAAqB;AACnF;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA,oCAAmC,QAAQ;AAC3C;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d3d06a2ddd8b23664e64","import AlgorithmVisualization from './algorithm_visualization';\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  // console.log(\"Creating new AlgorithmVisualization instance\");\n  new AlgorithmVisualization();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/entry.js","import QuickSort from './quicksort';\nimport test from './test';\n\nclass AlgorithmVisualization {\n  constructor() {\n    this.sizeVisualizationArea();\n    this.quickSort();\n    // new test(AlgorithmVisualization.OPTIONS);\n  }\n\n  sizeVisualizationArea() {\n    let windowWidth = $(window).width();\n    $(\"#visualization-area\").width(windowWidth-200);\n    // $(\"#visualization-area\").css(\"width\", windowWidth-200);\n    // console.log(`Setting viz area to ${windowWidth-200}px`);\n  }\n\n  quickSort() {\n    // console.log(\"Creating new QuickSort instance\");\n    new QuickSort(AlgorithmVisualization.OPTIONS);\n  }\n}\n\n// const elementHeight = 100;\n// const elementWidth = 80;\n\nAlgorithmVisualization.OPTIONS = {\n  visAreaId: \"visualization-area\",\n  algorithmTitleId: \"vis-area-title\",\n  drawingAreaId: \"drawing-area\",\n  svgPathContainerClass: \"path-container\",\n  arrayElContainerClass: \"array-element-container\",\n  bracketElClass: \"bracket\",\n  animateElClass: \"animate\",\n  arrayElClass: \"array-element\",\n  plusElClass: \"plus\",\n\n  pivotColor: \"yellow\",\n  pathColor: \"red\",\n  pathWidth: 3,\n  elementHeightFactor: 0.10,\n  elementWidthFactor: 0.045,\n  elementRadiusFactor: 0.35,\n  fontSizeFactor: 0.5,\n\n  colors: {\n    pathColor: \"red\",\n    lightGreen: \"#8cff66\",\n    lightGreen2: \"#53ff1a\",\n    lightBlue: \"#66b3ff\",\n    lightPurple: \"#d24dff\",\n    lightOrange: \"#ff9933\",\n    lightBlue2: \"#99ccff\",\n    lightBlue3: \"#3399ff\"\n  }\n};\n\nmodule.exports = AlgorithmVisualization;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithm_visualization.js","import AnimationOptions from './animation_options';\nimport anime from 'animejs';\n\n\nclass Quicksort extends AnimationOptions {\n  constructor(options) {\n    super(options);\n    this.startArray = [5, 1, 2, 3, 7, 4, 0 , 6];\n    this.numElements = this.startArray.length;\n    this.leftIndent = this.calculateLeftIndent();\n    this.algorithmTitle.html(\"Quicksort\");\n    this.renderStartLayer();\n    this.renderLayer1();\n    this.renderLayer2();\n    this.renderLayer3();\n    this.renderLayer4();\n    this.renderLayer5();\n    this.renderLayer6();\n    this.renderLayer7();\n    this.renderLayer8();\n  }\n\n  renderStartLayer() {\n    console.log(\"Rendering start layer\");\n    // Create open bracket\n    let openingBracket = this.createArrayBracket({\n      topOffset: 0,\n      leftOffset: this.leftIndent,\n      bracketType: '[',\n      layer: 0\n    });\n    this.drawingArea.append(openingBracket);\n\n    let arrayElementParams;\n\n    this.startArray.forEach((el, idx) => {\n      // Create layer 0 array elements.\n      arrayElementParams = {\n        val: el,\n        layer: 0,\n        topOffset: 0,\n        leftOffset: this.leftIndent + this.bracketWidth + idx*this.elementWidth\n      };\n      this.drawingArea.append(this.createArrayElement(arrayElementParams));\n\n      // Create layer 0 animateable elements.\n      arrayElementParams.animate = true;\n      this.drawingArea.append(this.createArrayElement(arrayElementParams));\n    });\n\n    // Create closing bracket\n    let closingBracket = this.createArrayBracket({\n      topOffset: -3,\n      leftOffset: this.leftIndent + this.numElements*this.elementWidth\n                  + this.bracketWidth,\n      bracketType: ']',\n      layer: 0\n    });\n    this.drawingArea.append(closingBracket);\n  }\n\n  // Renders a section of a layer\n  // Takes an options object with the keys:\n  //     fromArray, fromLayer, toLayer, sectionCharString, layerLeftOffset,\n  //     topOffset, referenceEl\n  renderSection(options) {\n    let prevElements = {};\n    let elementOffsets = {};\n\n    options.fromArray.forEach(el => {\n      prevElements[el] = $(`#${this.createArrayElId(options.fromLayer, el)}`);\n    });\n\n    let sectionChars = options.sectionCharString.split(\"\");\n    let layerLeftOffset = parseInt(prevElements[options.referenceEl].css(\"left\")) +\n                          options.layerLeftOffset;\n    let topOffset = options.topOffset;\n\n    sectionChars.forEach(char => {\n      if (char === '[' || char === ']') {\n        this.drawingArea.append(this.createArrayBracket({\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset,\n          bracketType: char,\n          layer: options.toLayer\n        }));\n        layerLeftOffset += this.bracketWidth;\n      } else if (char === '+') {\n        this.drawingArea.append(this.createPlusSign({\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset,\n          layer: options.toLayer\n        }));\n        layerLeftOffset += this.plusWidth;\n      } else if (char === ' ') {\n        this.drawingArea.append(this.createSpaceEl({\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset,\n        }));\n        layerLeftOffset += this.spaceWidth;\n      }\n      else { // must be an array element at this point\n        this.drawingArea.append(this.createArrayElement({\n          layer: options.toLayer,\n          val: parseInt(char),\n          topOffset: topOffset,\n          leftOffset: layerLeftOffset\n        }));\n        layerLeftOffset += this.elementWidth;\n      }\n    });\n  }\n\n  // Renders a section of a layer\n  // Takes an options object with the keys:\n  //     fromArray, fromLayer, toLayer, sectionCharString, layerLeftOffset,\n  //     topOffset,\n  renderLayer1() {\n    let renderOptions = {\n      fromArray: this.startArray,\n      fromLayer: 0,\n      toLayer: 1,\n      sectionCharString: '[10]+[2]+[53746]',\n      layerLeftOffset: -3 * this.bracketWidth - 2 * this.elementWidth -\n                       this.plusWidth,\n      topOffset: this.elementHeight,\n      referenceEl: 2\n    };\n\n    this.renderSection(renderOptions);\n  }\n\n  renderLayer2() {\n    let leftRenderOptions = {\n      fromArray: [1, 0],\n      fromLayer: 1,\n      toLayer: 2,\n      sectionCharString: '[0]+[1]+[ ]',\n      layerLeftOffset: -3*this.bracketWidth - this.plusWidth -\n                       this.elementWidth,\n      referenceEl: 1\n    };\n    leftRenderOptions.topOffset = leftRenderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(leftRenderOptions);\n\n    let rightRenderOptions = {\n      fromArray: [5, 3, 7, 4, 6],\n      fromLayer: 1,\n      toLayer: 2,\n      sectionCharString: '[3]+[4]+[576]',\n      layerLeftOffset: -3*this.bracketWidth - this.plusWidth -\n                       this.elementWidth,\n      referenceEl: 4\n    };\n    rightRenderOptions.topOffset = rightRenderOptions.toLayer * this.elementHeight;\n    this.renderSection(rightRenderOptions);\n  }\n\n  renderLayer3() {\n    let renderOptions = {\n      fromArray: [5, 7, 6],\n      fromLayer: 2,\n      toLayer: 3,\n      sectionCharString: '[56]+[7]+[ ]',\n      layerLeftOffset: -3*this.bracketWidth - this.plusWidth -\n                       2*this.elementWidth,\n      referenceEl: 7\n    };\n    renderOptions.topOffset = renderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(renderOptions);\n  }\n\n  renderLayer4() {\n    let renderOptions = {\n      fromArray: [5, 6],\n      fromLayer: 3,\n      toLayer: 4,\n      sectionCharString: '[5]+[6]+[ ]',\n      layerLeftOffset: -3*this.bracketWidth - this.plusWidth -\n                       this.elementWidth,\n      topOffset: 4*this.elementHeight,\n      referenceEl: 6\n    };\n    renderOptions.topOffset = renderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(renderOptions);\n  }\n\n  renderLayer5() {\n    let renderOptions = {\n      fromArray: [5, 6],\n      fromLayer: 4,\n      toLayer: 5,\n      sectionCharString: '[56]+[7]+[ ]',\n      layerLeftOffset: -this.bracketWidth - this.elementWidth,\n      referenceEl: 6\n    };\n    renderOptions.topOffset = renderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(renderOptions);\n  }\n\n  renderLayer6() {\n    let leftRenderOptions = {\n      fromArray: [0, 1],\n      fromLayer: 2,\n      toLayer: 6,\n      sectionCharString: '[0]+[1]+[ ]',\n      layerLeftOffset: -this.bracketWidth,\n      referenceEl: 0\n    };\n    leftRenderOptions.topOffset = leftRenderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(leftRenderOptions);\n\n    let rightRenderOptions = {\n      fromArray: [3, 4, 5, 7, 6],\n      fromLayer: 2,\n      toLayer: 6,\n      sectionCharString: '[3]+[4]+[567]',\n      layerLeftOffset: -this.bracketWidth,\n      referenceEl: 3\n    };\n    rightRenderOptions.topOffset = rightRenderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(rightRenderOptions);\n  }\n\n  renderLayer7() {\n    let renderOptions = {\n      fromArray: [1, 0, 2, 5, 3, 7, 4, 6],\n      fromLayer: 1,\n      toLayer: 7,\n      sectionCharString: '[01]+[2]+[34567]',\n      layerLeftOffset: -this.bracketWidth,\n      referenceEl: 1\n    };\n    renderOptions.topOffset = renderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(renderOptions);\n  }\n\n  renderLayer8() {\n    let renderOptions = {\n      fromArray: [5, 1, 2, 3, 7, 4, 0, 6],\n      fromLayer: 0,\n      toLayer: 8,\n      sectionCharString: '[01234567]',\n      layerLeftOffset: -this.bracketWidth,\n      referenceEl: 5\n    };\n    renderOptions.topOffset = renderOptions.toLayer * this.elementHeight;\n\n    this.renderSection(renderOptions);\n  }\n}\n\n\nmodule.exports = Quicksort;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/quicksort.js","import anime from 'animejs';\n\nclass AnimationOptions {\n  constructor(options) {\n    this.visAreaId = options.visAreaId;\n    this.algorithmTitle = $(`#${options.algorithmTitleId}`);\n    this.drawingArea = $(`#${options.drawingAreaId}`);\n    this.arrayElContainerClass = options.arrayElContainerClass;\n    this.svgPathContainerClass = options.svgPathContainerClass;\n    this.arrayElClass = options.arrayElClass;\n    this.bracketElClass = options.bracketElClass;\n    this.animateElClass = options.animateElClass;\n    this.plusElClass = options.plusElClass;\n\n    this.pivotColor = options.pivotColor;\n    this.pathColor = options.pathColor;  // only time !== none is for testing\n    this.pathWidth = options.pathWidth;  // just for testing\n\n    this.elementHeightFactor = options.elementHeightFactor;\n    this.elementWidthFactor = options.elementWidthFactor;\n    this.elementRadiusFactor = options.elementRadiusFactor;\n    this.fontSizeFactor = options.fontSizeFactor;\n\n    this.calibrateSizings();\n\n    this.plusSize = this.fontSize;\n    this.plusWidth = Math.floor(this.elementWidth*0.5);\n    this.plusHeight = this.elementHeight;\n\n    this.spaceWidth = Math.floor(this.elementWidth*0.25);\n    this.spaceHeight = this.elementHeight;\n\n    this.colors = options.colors;\n    // this.printOptions(options);\n  }\n\n  printOptions(options) {\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach(optionKey => {\n      console.log(`${optionKey}: ${options[optionKey]}`);\n    });\n  }\n\n  calibrateSizings() {\n    let visAreaHeight = (\n      $(window).innerHeight() -\n      parseInt(this.algorithmTitle.height()) +\n      parseInt(this.algorithmTitle.css(\"padding-top\")) +\n      parseInt(this.algorithmTitle.css(\"padding-bottom\"))\n    );\n    this.elementHeight = Math.floor(this.elementHeightFactor * visAreaHeight);\n    this.elementWidth = Math.floor(this.elementWidthFactor *\n                                    parseInt(this.drawingArea.css(\"width\")));\n    this.elementRadius = Math.min(\n      Math.floor(this.elementRadiusFactor * this.elementHeight),\n      Math.floor(this.elementRadiusFactor * this.elementWidth)\n    );\n    this.fontSize = Math.min(\n      Math.floor(this.fontSizeFactor * this.elementHeight),\n      Math.floor(this.fontSizeFactor * this.elementWidth)\n    );\n\n    this.bracketSize = Math.floor(this.elementRadius * 2 * 1.3);\n\n    this.bracketWidth = Math.floor(this.elementWidth/3);\n    this.bracketHeight = this.elementHeight;\n    this.bracketTopOffsetAdjustment = Math.ceil(-0.05*this.bracketSize);\n  }\n\n  createPathId(fromLayer, toLayer, val) {\n    return `path-l${fromLayer}-l${toLayer}-v${val}`;\n  }\n\n  createArrayElId(layer, val, animateable) {\n    let idName = `layer-${layer}-v${val}`;\n    if (animateable) idName += `-${this.animateElClass}`;\n    return idName;\n  }\n\n  createArrayElClass(layer, animateable) {\n    let className = `${this.arrayElContainerClass} l${layer}`;\n    if (animateable) className += ` ${this.animateElClass}`;\n    return className;\n  }\n\n  createBracketClass(layer) {\n    return `${this.bracketElClass} l${layer}`;\n  }\n\n  createPlusClass(layer) {\n    return `${this.plusElClass} l${layer}`;\n  }\n\n  // Creates div element with array element inside.\n  // Requires options object containing:\n  //   layer, val, topOffset, leftOffset\n  //   ***optional keys: idName, className, animate\n  createArrayElement(options) {\n    // Create container for element that is positioned absolute to the drawing\n    //   area and display:flex to center the array element div.\n    let idName = options.idName || this.createArrayElId(options.layer,\n                                                        options.val,\n                                                        options.animate);\n    let className = options.className || this.createArrayElClass(options.layer,\n                                                                 options.animate);\n\n    let containerParams = {\n      class: className,\n      id: idName,\n      width: this.elementWidth,\n      height: this.elementHeight\n    };\n\n    let $arrayElCont = $(\"<div>\", containerParams);\n    $arrayElCont.offset({\n      top: options.topOffset,\n      left: options.leftOffset\n    });\n\n    // Create circular div to house the <p> tag with the element value.\n    // display:flex to center the <p> elementthis.bracketSize.\n    let elementParams = {\n      class: this.arrayElClass,\n      width: this.elementRadius*2,\n      height: this.elementRadius*2,\n    };\n    let $element = $(\"<div>\", elementParams);\n    $element.width(this.elementRadius*2);\n    $element.height(this.elementRadius*2);\n\n    // Create <p> tag with element value\n    let textParams = {\n      style: `font-size:${this.fontSize}px`\n    };\n    let $p = $(\"<p>\", textParams);\n    $p.html(options.val);\n\n    // Append <p> tag to circular div and circular div to the element container.\n    $element.append($p);\n    $arrayElCont.append($element);\n\n    return $arrayElCont;\n  }\n\n  // Creates svg element with path element inside.\n  // Requires options object containing:\n  //   fromLayer, toLayer, val, xStart, yStart, topOffset, leftOffset\n  //   ***optional keys: idName, verticalShift, horizontalShift\n  // Returns <svg><path ></svg>\n  createSvgPath(options) {\n    let svgParams = {\n      height: options.height,\n      width: options.width,\n      class: this.svgPathContainerClass\n    };\n\n    let $newSvg = $(\"<svg>\", svgParams);\n    let idName = options.idName || this.createPathId(options.fromLayer,\n                                                     options.toLayer,\n                                                     options.val);\n    let verticalShift = options.verticalShift || 0;\n    let horizontalShift = options.horizontalShift || 0;\n\n    let pathParams = {\n      fill: \"none\",\n      stroke: this.pathColor,\n      \"stroke-width\": this.strokeWidth,\n      id: idName,\n      d: `M${options.xStart},${options.yStart} ` +\n         `v${verticalShift} h${horizontalShift}`\n    };\n\n    let $path = $(\"<path>\", pathParams);\n    $newSvg.append($path);\n    $newSvg.offset({\n      top: Math.floor(options.topOffset),\n      left: Math.floor(options.leftOffset)\n    });\n\n    return $newSvg;\n  }\n\n  // Creates animejs animation\n  // Requires options object with the keys: pathIdName, animeTarget, duration.\n  createAnimation(options) {\n    let myPath = anime.path(options.pathIdName);\n\n    anime({\n      targets: options.animeTarget,\n      translateX: myPath,\n      translateY: myPath,\n      duration: options.duration,\n      loop: false,\n      easing: 'easeInOutExpo'\n    });\n  }\n\n  // Create div containing an array bracket.\n  // Takes an options object with the keys:\n  //       topOffset, leftOffset, bracketType, layer\n  createArrayBracket(options) {\n    let $bracketContainer = $(\"<div>\", {\n      height: this.bracketHeight,\n      width: this.bracketWidth,\n      class: this.createBracketClass(options.layer)\n    });\n\n    $bracketContainer.offset({\n      top: Math.floor(options.topOffset + this.bracketTopOffsetAdjustment),\n      left: Math.floor(options.leftOffset)\n    });\n\n    let $p = $(\"<p>\", { style: `font-size:${this.bracketSize}px` });\n    $p.html(options.bracketType);\n    $bracketContainer.append($p);\n    return $bracketContainer;\n  }\n\n  // Create div containing a plus sign.\n  // Takes an options object with the keys:\n  //       topOffset, leftOffset, layer\n  createPlusSign(options) {\n    let $plusContainer = $(\"<div>\", {\n      height: this.plusHeight,\n      width: this.plusWidth,\n      class: this.createPlusClass(options.layer)\n    });\n\n    $plusContainer.offset({\n      top: Math.floor(options.topOffset),\n      left: Math.floor(options.leftOffset)\n    });\n\n    let $p = $(\"<p>\", { style: `font-size:${this.plusSize}px` });\n    $p.html('+');\n    $plusContainer.append($p);\n    return $plusContainer;\n  }\n\n  createSpaceEl(options) {\n    let $plusContainer = $(\"<div>\", {\n      height: this.plusHeight,\n      width: this.plusWidth,\n    });\n\n    $plusContainer.offset({\n      top: Math.floor(options.topOffset),\n      left: Math.floor(options.leftOffset)\n    });\n\n    return $plusContainer;\n  }\n\n  calculateLeftIndent() {\n    let vizAreaWidth = $(`#${this.visAreaId}`).width();\n    let startSpaceOccupied = this.numElements * this.elementWidth +\n                             2 * this.bracketWidth;\n    let leftIndent = Math.floor((vizAreaWidth - startSpaceOccupied)/2);\n    return leftIndent;\n  }\n\n}\n\nmodule.exports = AnimationOptions;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/animation_options.js","/*\n * Anime v1.1.1\n * http://anime-js.com\n * JavaScript animation engine\n * Copyright (c) 2016 Julian Garnier\n * http://juliangarnier.com\n * Released under the MIT license\n */\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.anime = factory();\n  }\n}(this, function () {\n\n  var version = '1.1.1';\n\n  // Defaults\n\n  var defaultSettings = {\n    duration: 1000,\n    delay: 0,\n    loop: false,\n    autoplay: true,\n    direction: 'normal',\n    easing: 'easeOutElastic',\n    elasticity: 400,\n    round: false,\n    begin: undefined,\n    update: undefined,\n    complete: undefined\n  }\n\n  // Transforms\n\n  var validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skewX', 'skewY'];\n  var transform, transformStr = 'transform';\n\n  // Utils\n\n  var is = {\n    arr: function(a) { return Array.isArray(a) },\n    obj: function(a) { return Object.prototype.toString.call(a).indexOf('Object') > -1 },\n    svg: function(a) { return a instanceof SVGElement },\n    dom: function(a) { return a.nodeType || is.svg(a) },\n    num: function(a) { return !isNaN(parseInt(a)) },\n    str: function(a) { return typeof a === 'string' },\n    fnc: function(a) { return typeof a === 'function' },\n    und: function(a) { return typeof a === 'undefined' },\n    nul: function(a) { return typeof a === 'null' },\n    hex: function(a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a) },\n    rgb: function(a) { return /^rgb/.test(a) },\n    hsl: function(a) { return /^hsl/.test(a) },\n    col: function(a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)) }\n  }\n\n  // Easings functions adapted from http://jqueryui.com/\n\n  var easings = (function() {\n    var eases = {};\n    var names = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n    var functions = {\n      Sine: function(t) { return 1 - Math.cos( t * Math.PI / 2 ); },\n      Circ: function(t) { return 1 - Math.sqrt( 1 - t * t ); },\n      Elastic: function(t, m) {\n        if( t === 0 || t === 1 ) return t;\n        var p = (1 - Math.min(m, 998) / 1000), st = t / 1, st1 = st - 1, s = p / ( 2 * Math.PI ) * Math.asin( 1 );\n        return -( Math.pow( 2, 10 * st1 ) * Math.sin( ( st1 - s ) * ( 2 * Math.PI ) / p ) );\n      },\n      Back: function(t) { return t * t * ( 3 * t - 2 ); },\n      Bounce: function(t) {\n        var pow2, bounce = 4;\n        while ( t < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}\n        return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - t, 2 );\n      }\n    }\n    names.forEach(function(name, i) {\n      functions[name] = function(t) {\n        return Math.pow( t, i + 2 );\n      }\n    });\n    Object.keys(functions).forEach(function(name) {\n      var easeIn = functions[name];\n      eases['easeIn' + name] = easeIn;\n      eases['easeOut' + name] = function(t, m) { return 1 - easeIn(1 - t, m); };\n      eases['easeInOut' + name] = function(t, m) { return t < 0.5 ? easeIn(t * 2, m) / 2 : 1 - easeIn(t * -2 + 2, m) / 2; };\n      eases['easeOutIn' + name] = function(t, m) { return t < 0.5 ? (1 - easeIn(1 - 2 * t, m)) / 2 : (easeIn(t * 2 - 1, m) + 1) / 2; };\n    });\n    eases.linear = function(t) { return t; };\n    return eases;\n  })();\n\n  // Strings\n\n  var numberToString = function(val) {\n    return (is.str(val)) ? val : val + '';\n  }\n\n  var stringToHyphens = function(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  var selectString = function(str) {\n    if (is.col(str)) return false;\n    try {\n      var nodes = document.querySelectorAll(str);\n      return nodes;\n    } catch(e) {\n      return false;\n    }\n  }\n\n  // Numbers\n\n  var random = function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  // Arrays\n\n  var flattenArray = function(arr) {\n    return arr.reduce(function(a, b) {\n      return a.concat(is.arr(b) ? flattenArray(b) : b);\n    }, []);\n  }\n\n  var toArray = function(o) {\n    if (is.arr(o)) return o;\n    if (is.str(o)) o = selectString(o) || o;\n    if (o instanceof NodeList || o instanceof HTMLCollection) return [].slice.call(o);\n    return [o];\n  }\n\n  var arrayContains = function(arr, val) {\n    return arr.some(function(a) { return a === val; });\n  }\n\n  var groupArrayByProps = function(arr, propsArr) {\n    var groups = {};\n    arr.forEach(function(o) {\n      var group = JSON.stringify(propsArr.map(function(p) { return o[p]; }));\n      groups[group] = groups[group] || [];\n      groups[group].push(o);\n    });\n    return Object.keys(groups).map(function(group) {\n      return groups[group];\n    });\n  }\n\n  var removeArrayDuplicates = function(arr) {\n    return arr.filter(function(item, pos, self) {\n      return self.indexOf(item) === pos;\n    });\n  }\n\n  // Objects\n\n  var cloneObject = function(o) {\n    var newObject = {};\n    for (var p in o) newObject[p] = o[p];\n    return newObject;\n  }\n\n  var mergeObjects = function(o1, o2) {\n    for (var p in o2) o1[p] = !is.und(o1[p]) ? o1[p] : o2[p];\n    return o1;\n  }\n\n  // Colors\n\n  var hexToRgb = function(hex) {\n    var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    var hex = hex.replace(rgx, function(m, r, g, b) { return r + r + g + g + b + b; });\n    var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    var r = parseInt(rgb[1], 16);\n    var g = parseInt(rgb[2], 16);\n    var b = parseInt(rgb[3], 16);\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  }\n\n  var hslToRgb = function(hsl) {\n    var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hsl);\n    var h = parseInt(hsl[1]) / 360;\n    var s = parseInt(hsl[2]) / 100;\n    var l = parseInt(hsl[3]) / 100;\n    var hue2rgb = function(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n    var r, g, b;\n    if (s == 0) {\n      r = g = b = l;\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n    return 'rgb(' + r * 255 + ',' + g * 255 + ',' + b * 255 + ')';\n  }\n\n  var colorToRgb = function(val) {\n    if (is.rgb(val)) return val;\n    if (is.hex(val)) return hexToRgb(val);\n    if (is.hsl(val)) return hslToRgb(val);\n  }\n\n  // Units\n\n  var getUnit = function(val) {\n    return /([\\+\\-]?[0-9|auto\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg)?/.exec(val)[2];\n  }\n\n  var addDefaultTransformUnit = function(prop, val, intialVal) {\n    if (getUnit(val)) return val;\n    if (prop.indexOf('translate') > -1) return getUnit(intialVal) ? val + getUnit(intialVal) : val + 'px';\n    if (prop.indexOf('rotate') > -1 || prop.indexOf('skew') > -1) return val + 'deg';\n    return val;\n  }\n\n  // Values\n\n  var getCSSValue = function(el, prop) {\n    // First check if prop is a valid CSS property\n    if (prop in el.style) {\n      // Then return the property value or fallback to '0' when getPropertyValue fails\n      return getComputedStyle(el).getPropertyValue(stringToHyphens(prop)) || '0';\n    }\n  }\n\n  var getTransformValue = function(el, prop) {\n    var defaultVal = prop.indexOf('scale') > -1 ? 1 : 0;\n    var str = el.style.transform;\n    if (!str) return defaultVal;\n    var rgx = /(\\w+)\\((.+?)\\)/g;\n    var match = [];\n    var props = [];\n    var values = [];\n    while (match = rgx.exec(str)) {\n      props.push(match[1]);\n      values.push(match[2]);\n    }\n    var val = values.filter(function(f, i) { return props[i] === prop; });\n    return val.length ? val[0] : defaultVal;\n  }\n\n  var getAnimationType = function(el, prop) {\n    if ( is.dom(el) && arrayContains(validTransforms, prop)) return 'transform';\n    if ( is.dom(el) && (el.getAttribute(prop) || (is.svg(el) && el[prop]))) return 'attribute';\n    if ( is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) return 'css';\n    if (!is.nul(el[prop]) && !is.und(el[prop])) return 'object';\n  }\n\n  var getInitialTargetValue = function(target, prop) {\n    switch (getAnimationType(target, prop)) {\n      case 'transform': return getTransformValue(target, prop);\n      case 'css': return getCSSValue(target, prop);\n      case 'attribute': return target.getAttribute(prop);\n    }\n    return target[prop] || 0;\n  }\n\n  var getValidValue = function(values, val, originalCSS) {\n    if (is.col(val)) return colorToRgb(val);\n    if (getUnit(val)) return val;\n    var unit = getUnit(values.to) ? getUnit(values.to) : getUnit(values.from);\n    if (!unit && originalCSS) unit = getUnit(originalCSS);\n    return unit ? val + unit : val;\n  }\n\n  var decomposeValue = function(val) {\n    var rgx = /-?\\d*\\.?\\d+/g;\n    return {\n      original: val,\n      numbers: numberToString(val).match(rgx) ? numberToString(val).match(rgx).map(Number) : [0],\n      strings: numberToString(val).split(rgx)\n    }\n  }\n\n  var recomposeValue = function(numbers, strings, initialStrings) {\n    return strings.reduce(function(a, b, i) {\n      var b = (b ? b : initialStrings[i - 1]);\n      return a + numbers[i - 1] + b;\n    });\n  }\n\n  // Animatables\n\n  var getAnimatables = function(targets) {\n    var targets = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n    return targets.map(function(t, i) {\n      return { target: t, id: i };\n    });\n  }\n\n  // Properties\n\n  var getProperties = function(params, settings) {\n    var props = [];\n    for (var p in params) {\n      if (!defaultSettings.hasOwnProperty(p) && p !== 'targets') {\n        var prop = is.obj(params[p]) ? cloneObject(params[p]) : {value: params[p]};\n        prop.name = p;\n        props.push(mergeObjects(prop, settings));\n      }\n    }\n    return props;\n  }\n\n  var getPropertiesValues = function(target, prop, value, i) {\n    var values = toArray( is.fnc(value) ? value(target, i) : value);\n    return {\n      from: (values.length > 1) ? values[0] : getInitialTargetValue(target, prop),\n      to: (values.length > 1) ? values[1] : values[0]\n    }\n  }\n\n  // Tweens\n\n  var getTweenValues = function(prop, values, type, target) {\n    var valid = {};\n    if (type === 'transform') {\n      valid.from = prop + '(' + addDefaultTransformUnit(prop, values.from, values.to) + ')';\n      valid.to = prop + '(' + addDefaultTransformUnit(prop, values.to) + ')';\n    } else {\n      var originalCSS = (type === 'css') ? getCSSValue(target, prop) : undefined;\n      valid.from = getValidValue(values, values.from, originalCSS);\n      valid.to = getValidValue(values, values.to, originalCSS);\n    }\n    return { from: decomposeValue(valid.from), to: decomposeValue(valid.to) };\n  }\n\n  var getTweensProps = function(animatables, props) {\n    var tweensProps = [];\n    animatables.forEach(function(animatable, i) {\n      var target = animatable.target;\n      return props.forEach(function(prop) {\n        var animType = getAnimationType(target, prop.name);\n        if (animType) {\n          var values = getPropertiesValues(target, prop.name, prop.value, i);\n          var tween = cloneObject(prop);\n          tween.animatables = animatable;\n          tween.type = animType;\n          tween.from = getTweenValues(prop.name, values, tween.type, target).from;\n          tween.to = getTweenValues(prop.name, values, tween.type, target).to;\n          tween.round = (is.col(values.from) || tween.round) ? 1 : 0;\n          tween.delay = (is.fnc(tween.delay) ? tween.delay(target, i, animatables.length) : tween.delay) / animation.speed;\n          tween.duration = (is.fnc(tween.duration) ? tween.duration(target, i, animatables.length) : tween.duration) / animation.speed;\n          tweensProps.push(tween);\n        }\n      });\n    });\n    return tweensProps;\n  }\n\n  var getTweens = function(animatables, props) {\n    var tweensProps = getTweensProps(animatables, props);\n    var splittedProps = groupArrayByProps(tweensProps, ['name', 'from', 'to', 'delay', 'duration']);\n    return splittedProps.map(function(tweenProps) {\n      var tween = cloneObject(tweenProps[0]);\n      tween.animatables = tweenProps.map(function(p) { return p.animatables });\n      tween.totalDuration = tween.delay + tween.duration;\n      return tween;\n    });\n  }\n\n  var reverseTweens = function(anim, delays) {\n    anim.tweens.forEach(function(tween) {\n      var toVal = tween.to;\n      var fromVal = tween.from;\n      var delayVal = anim.duration - (tween.delay + tween.duration);\n      tween.from = toVal;\n      tween.to = fromVal;\n      if (delays) tween.delay = delayVal;\n    });\n    anim.reversed = anim.reversed ? false : true;\n  }\n\n  var getTweensDuration = function(tweens) {\n    if (tweens.length) return Math.max.apply(Math, tweens.map(function(tween){ return tween.totalDuration; }));\n  }\n\n  // will-change\n\n  var getWillChange = function(anim) {\n    var props = [];\n    var els = [];\n    anim.tweens.forEach(function(tween) {\n      if (tween.type === 'css' || tween.type === 'transform' ) {\n        props.push(tween.type === 'css' ? stringToHyphens(tween.name) : 'transform');\n        tween.animatables.forEach(function(animatable) { els.push(animatable.target); });\n      }\n    });\n    return {\n      properties: removeArrayDuplicates(props).join(', '),\n      elements: removeArrayDuplicates(els)\n    }\n  }\n\n  var setWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.willChange = willChange.properties;\n    });\n  }\n\n  var removeWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.removeProperty('will-change');\n    });\n  }\n\n  /* Svg path */\n\n  var getPathProps = function(path) {\n    var el = is.str(path) ? selectString(path)[0] : path;\n    return {\n      path: el,\n      value: el.getTotalLength()\n    }\n  }\n\n  var snapProgressToPath = function(tween, progress) {\n    var pathEl = tween.path;\n    var pathProgress = tween.value * progress;\n    var point = function(offset) {\n      var o = offset || 0;\n      var p = progress > 1 ? tween.value + o : pathProgress + o;\n      return pathEl.getPointAtLength(p);\n    }\n    var p = point();\n    var p0 = point(-1);\n    var p1 = point(+1);\n    switch (tween.name) {\n      case 'translateX': return p.x;\n      case 'translateY': return p.y;\n      case 'rotate': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n    }\n  }\n\n  // Progress\n\n  var getTweenProgress = function(tween, time) {\n    var elapsed = Math.min(Math.max(time - tween.delay, 0), tween.duration);\n    var percent = elapsed / tween.duration;\n    var progress = tween.to.numbers.map(function(number, p) {\n      var start = tween.from.numbers[p];\n      var eased = easings[tween.easing](percent, tween.elasticity);\n      var val = tween.path ? snapProgressToPath(tween, eased) : start + eased * (number - start);\n      val = tween.round ? Math.round(val * tween.round) / tween.round : val;\n      return val;\n    });\n    return recomposeValue(progress, tween.to.strings, tween.from.strings);\n  }\n\n  var setAnimationProgress = function(anim, time) {\n    var transforms;\n    anim.currentTime = time;\n    anim.progress = (time / anim.duration) * 100;\n    for (var t = 0; t < anim.tweens.length; t++) {\n      var tween = anim.tweens[t];\n      tween.currentValue = getTweenProgress(tween, time);\n      var progress = tween.currentValue;\n      for (var a = 0; a < tween.animatables.length; a++) {\n        var animatable = tween.animatables[a];\n        var id = animatable.id;\n        var target = animatable.target;\n        var name = tween.name;\n        switch (tween.type) {\n          case 'css': target.style[name] = progress; break;\n          case 'attribute': target.setAttribute(name, progress); break;\n          case 'object': target[name] = progress; break;\n          case 'transform':\n          if (!transforms) transforms = {};\n          if (!transforms[id]) transforms[id] = [];\n          transforms[id].push(progress);\n          break;\n        }\n      }\n    }\n    if (transforms) {\n      if (!transform) transform = (getCSSValue(document.body, transformStr) ? '' : '-webkit-') + transformStr;\n      for (var t in transforms) {\n        anim.animatables[t].target.style[transform] = transforms[t].join(' ');\n      }\n    }\n    if (anim.settings.update) anim.settings.update(anim);\n  }\n\n  // Animation\n\n  var createAnimation = function(params) {\n    var anim = {};\n    anim.animatables = getAnimatables(params.targets);\n    anim.settings = mergeObjects(params, defaultSettings);\n    anim.properties = getProperties(params, anim.settings);\n    anim.tweens = getTweens(anim.animatables, anim.properties);\n    anim.duration = getTweensDuration(anim.tweens) || params.duration;\n    anim.currentTime = 0;\n    anim.progress = 0;\n    anim.ended = false;\n    return anim;\n  }\n\n  // Public\n\n  var animations = [];\n  var raf = 0;\n\n  var engine = (function() {\n    var play = function() { raf = requestAnimationFrame(step); };\n    var step = function(t) {\n      if (animations.length) {\n        for (var i = 0; i < animations.length; i++) animations[i].tick(t);\n        play();\n      } else {\n        cancelAnimationFrame(raf);\n        raf = 0;\n      }\n    }\n    return play;\n  })();\n\n  var animation = function(params) {\n\n    var anim = createAnimation(params);\n    var time = {};\n\n    anim.tick = function(now) {\n      anim.ended = false;\n      if (!time.start) time.start = now;\n      time.current = Math.min(Math.max(time.last + now - time.start, 0), anim.duration);\n      setAnimationProgress(anim, time.current);\n      var s = anim.settings;\n      if (s.begin && time.current >= s.delay) { s.begin(anim); s.begin = undefined; };\n      if (time.current >= anim.duration) {\n        if (s.loop) {\n          time.start = now;\n          if (s.direction === 'alternate') reverseTweens(anim, true);\n          if (is.num(s.loop)) s.loop--;\n        } else {\n          anim.ended = true;\n          anim.pause();\n          if (s.complete) s.complete(anim);\n        }\n        time.last = 0;\n      }\n    }\n\n    anim.seek = function(progress) {\n      setAnimationProgress(anim, (progress / 100) * anim.duration);\n    }\n\n    anim.pause = function() {\n      removeWillChange(anim);\n      var i = animations.indexOf(anim);\n      if (i > -1) animations.splice(i, 1);\n    }\n\n    anim.play = function(params) {\n      anim.pause();\n      if (params) anim = mergeObjects(createAnimation(mergeObjects(params, anim.settings)), anim);\n      time.start = 0;\n      time.last = anim.ended ? 0 : anim.currentTime;\n      var s = anim.settings;\n      if (s.direction === 'reverse') reverseTweens(anim);\n      if (s.direction === 'alternate' && !s.loop) s.loop = 1;\n      setWillChange(anim);\n      animations.push(anim);\n      if (!raf) engine();\n    }\n\n    anim.restart = function() {\n      if (anim.reversed) reverseTweens(anim);\n      anim.pause();\n      anim.seek(0);\n      anim.play();\n    }\n\n    if (anim.settings.autoplay) anim.play();\n\n    return anim;\n\n  }\n\n  // Remove one or multiple targets from all active animations.\n\n  var remove = function(elements) {\n    var targets = flattenArray(is.arr(elements) ? elements.map(toArray) : toArray(elements));\n    for (var i = animations.length-1; i >= 0; i--) {\n      var animation = animations[i];\n      var tweens = animation.tweens;\n      for (var t = tweens.length-1; t >= 0; t--) {\n        var animatables = tweens[t].animatables;\n        for (var a = animatables.length-1; a >= 0; a--) {\n          if (arrayContains(targets, animatables[a].target)) {\n            animatables.splice(a, 1);\n            if (!animatables.length) tweens.splice(t, 1);\n            if (!tweens.length) animation.pause();\n          }\n        }\n      }\n    }\n  }\n\n  animation.version = version;\n  animation.speed = 1;\n  animation.list = animations;\n  animation.remove = remove;\n  animation.easings = easings;\n  animation.getValue = getInitialTargetValue;\n  animation.path = getPathProps;\n  animation.random = random;\n\n  return animation;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/animejs/anime.js\n// module id = 4\n// module chunks = 0","import AnimationOptions from './animation_options';\nimport anime from 'animejs';\n\n\nclass Test extends AnimationOptions {\n  constructor(options) {\n    super(options);\n    this.startArray = [5, 1, 2, 3, 7, 4, 0 , 6];\n    this.numElements = this.startArray.length;\n    this.leftIndent = this.calculateStartingLeftIndent();\n    this.bracketWidth = Math.floor(this.elementWidth * 0.2);\n    this.bracketSize = Math.floor(options.elementRadius * 2 * 1.4);\n    this.runTest();\n  }\n\n  runTest() {\n    console.log(\"running test\");\n    let $drawingArea = $(\"#drawing-area\");\n    let $testArrayElCont = $(\"<div>\", {class: \"array-element-container\",\n                                       id: \"test-source\",\n                                       width: this.elementWidth,\n                                       height: this.elementHeight});\n\n    let testDivParams = {\n      class: \"array-element\",\n      width: this.elementRadius*2,\n      height: this.elementRadius*2,\n      // style: `left:${Math.floor(this.leftIndent + this.elementWidth/2)}px;` +\n      //        `top:${Math.floor(this.elementHeight)*0}px`\n    };\n\n    let testTextParams = {\n      style: `font-size:${this.fontSize}px`\n    };\n\n    let $testElement = $(\"<div>\", testDivParams);\n    $testElement.width(this.elementRadius*2);\n    $testElement.height(this.elementRadius*2);\n    $testArrayElCont.offset({top: Math.floor(this.elementHeight)*0,\n                         left: Math.floor(this.leftIndent + this.elementWidth * 0)});\n    let $p = $(\"<p>\", testTextParams);\n    $p.html(0);\n    $testElement.append($p);\n    $testArrayElCont.append($testElement);\n\n    $drawingArea.append($testArrayElCont);\n\n\n    let svgParams = {\n      height: 103,\n      width: 200,\n      class: \"path-container\"\n    };\n\n    let $newSvg = $(\"<svg>\", svgParams);\n\n    let xStart = 0;\n    let yStart = 0;\n\n    let pathParams = {\n      fill: \"none\",\n      stroke: \"red\",\n      \"stroke-width\": 3,\n      id: \"testPath\",\n      d: `M${xStart},${yStart} v${100} h${200}`\n    };\n\n    // pathParams.d += `M${xStart},${yStart}`;\n    // pathParams.d += ` v${options.vertical} h${options.horizontal}`;\n\n    let $path = $(\"<path>\", pathParams);\n    $newSvg.append($path);\n    $newSvg.offset({top: Math.floor(this.elementHeight/2),\n                    left: Math.floor(this.leftIndent + this.elementWidth/2)});\n    $drawingArea.append($newSvg);\n\n    //  Move test\n    let $testmoveArrayElCont = $(\"<div>\", {class: \"array-element-container\",\n                                           id: \"test-move-0\",\n                                       width: this.elementWidth,\n                                       height: this.elementHeight});\n\n    let testmoveDivParams = {\n      class: \"array-element\",\n      width: this.elementRadius*2,\n      height: this.elementRadius*2,\n      // style: `left:${Math.floor(this.leftIndent + this.elementWidth/2)}px;` +\n      //        `top:${Math.floor(this.elementHeight)*0}px`\n    };\n\n    let testmoveTextParams = {\n      style: `font-size:${this.fontSize}px`\n    };\n\n    let $testmoveElement = $(\"<div>\", testmoveDivParams);\n    $testmoveElement.width(this.elementRadius*2);\n    $testmoveElement.height(this.elementRadius*2);\n    $testmoveArrayElCont.offset({top: Math.floor(this.elementHeight)*0,\n                         left: Math.floor(this.leftIndent + this.elementWidth * 0)});\n    let $pMove = $(\"<p>\", testmoveTextParams);\n    $pMove.html(0);\n    $testmoveElement.append($pMove);\n    $testmoveArrayElCont.append($testmoveElement);\n\n    $drawingArea.append($testmoveArrayElCont);\n    $(\"body\").html($(\"body\").html());\n\n\n    var myPath = anime.path(`#testPath`);\n\n    anime({\n      targets: `#test-move`,\n      translateX: myPath,\n      translateY: myPath,\n      duration: 2500,\n      loop: false,\n      easing: 'easeInOutExpo'\n    });\n\n    console.log(anime.easings);\n  }\n\n  calculateStartingLeftIndent() {\n    let vizAreaWidth = $(`#${this.visAreaId}`).width();\n    let startSpaceOccupied = this.numElements * this.elementWidth +\n                             2 * this.bracketWidth;\n    let leftIndent = Math.floor((vizAreaWidth - startSpaceOccupied)/2);\n    return leftIndent;\n  }\n}\n\nmodule.exports = Test;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/test.js"],"sourceRoot":""}