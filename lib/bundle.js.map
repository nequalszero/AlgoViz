{"version":3,"sources":["webpack:///webpack/bootstrap 10fa2fbcf0860eac4a52","webpack:///./lib/entry.js","webpack:///./lib/algorithm_visualization.js","webpack:///./lib/quick_sort.js","webpack:///./lib/animation_options.js","webpack:///./~/animejs/anime.js"],"names":["document","addEventListener","event","AlgorithmVisualization","sizeVisualizationArea","quickSort","windowWidth","$","window","width","OPTIONS","elementHeight","elementWidth","visAreaId","pivotColor","svgContainerId","elementRadius","Math","floor","elementCx","elementCy","fontSize","textY","textX","layerHeight","colors","pathColor","lightGreen","lightGreen2","lightBlue","lightPurple","lightOrange","lightBlue2","lightBlue3","module","exports","QuickSort","options","containerWidth","startElements","startElIdPrefix","startElClassName","startPivotEl","numElements","length","leftIndent","calculateLeftIndent","idToColorArray","generateIdToColorArray","renderLayers","renderStartLayer","renderLayer1","renderStartBrackets","renderStartElements","$svgContainer","bracketYPos","bracketSize","openBracketOptions","type","xPos","yPos","size","className","arrayElClassName","closeBracketOptions","append","createArrayBracket","html","elementOptions","forEach","el","idx","val","svgHeight","svgWidth","svgXPos","svgYPos","svgElXPosOffset","svgElYPosOffset","fillColor","pivot","idName","arrayElIdName","createSvgArrayElement","fadeOut","fadeIn","setTimeout","css","fill","oldClassName","dx","dy","oldLayerNum","newLayerNum","moveArrayElement","vizAreaWidth","startArraySpacing","AnimationOptions","optionKeys","Object","keys","console","log","optionKey","layerNum","oldElement","oldIdName","oldX","oldY","newX","newY","find","text","parseInt","abs","min","svgArrayElementParams","pathIdName","pathElIdName","pathParams","horizontal","vertical","color","newSvgEl","newPath","createPath","myPath","path","targets","translateX","translateY","rotate","duration","loop","easing","xStart","yStart","stroke","id","d","$path","svgParams","height","x","y","class","circleParams","textParams","style","$svg","$circle","$text","numLayers","$div","newLayer","yPosition","arr","createLayer","rectParams","$rect"],"mappings":"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BAA+B;AACrD,uBAAsB,iCAAiC;AACvD,uBAAsB,kCAAkC;AACxD,uBAAsB,6BAA6B;AACnD,uBAAsB,qBAAqB,EAAE,eAAe,EAAE,cAAc;AAC5E,uBAAsB,wBAAwB;AAC9C,uBAAsB,wBAAwB;AAC9C,uBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,wCAAwC,EAAE;AACnE,0BAAyB,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA,QAAO;AACP,0BAAyB,8BAA8B,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,iDAAgD,6BAA6B;AAC7E,mDAAkD,uEAAuE;AACzH,mDAAkD,kFAAkF;AACpI,MAAK;AACL,iCAAgC,UAAU;AAC1C;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,kBAAkB,EAAE;AACrD;;AAEA;AACA;AACA;AACA,4DAA2D,aAAa,EAAE;AAC1E;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sDAAqD,8BAA8B,EAAE;AACrF,4BAA2B,EAAE,UAAU,EAAE,UAAU,EAAE;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,0BAA0B,EAAE;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,eAAc;AACd,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uDAAsD,uBAAuB;AAC7E;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,+EAA8E,4BAA4B,EAAE;AAC5G;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,6BAA6B,EAAE;AACvF;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA,sBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD,iEAAgE;AAChE,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA2B,mCAAmC;AAC9D;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,eAAe,qBAAqB;AACnF;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA,oCAAmC,QAAQ;AAC3C;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 10fa2fbcf0860eac4a52","import AlgorithmVisualization from './algorithm_visualization';\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  // console.log(\"Creating new AlgorithmVisualization instance\");\n  new AlgorithmVisualization();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/entry.js","import QuickSort from './quick_sort';\n\nclass AlgorithmVisualization {\n  constructor() {\n    this.sizeVisualizationArea();\n    this.quickSort();\n  }\n\n  sizeVisualizationArea() {\n    let windowWidth = $(window).width();\n    $(\"#visualization-area\").width(windowWidth-200);\n    // $(\"#visualization-area\").css(\"width\", windowWidth-200);\n    // console.log(`Setting viz area to ${windowWidth-200}px`);\n  }\n\n  quickSort() {\n    // console.log(\"Creating new QuickSort instance\");\n    new QuickSort(AlgorithmVisualization.OPTIONS);\n  }\n}\n\nconst elementHeight = 100;\nconst elementWidth = 80;\n\nAlgorithmVisualization.OPTIONS = {\n  visAreaId: \"visualization-area\",\n  pivotColor: \"yellow\",\n  svgContainerId: \"svgContainer\",\n  elementHeight: elementHeight,\n  elementWidth: elementWidth,\n  elementRadius: Math.floor(elementWidth*0.4),\n  elementCx: Math.floor(elementWidth/2),\n  elementCy: elementHeight/2,\n  fontSize: Math.floor(elementWidth/2),\n  textY: Math.floor(0.65*elementHeight),\n  textX: Math.floor(0.37*elementWidth),\n  layerHeight: elementHeight,\n  colors: {\n    pathColor: \"red\",\n    lightGreen: \"#8cff66\",\n    lightGreen2: \"#53ff1a\",\n    lightBlue: \"#66b3ff\",\n    lightPurple: \"#d24dff\",\n    lightOrange: \"#ff9933\",\n    lightBlue2: \"#99ccff\",\n    lightBlue3: \"#3399ff\"\n  }\n};\n\nmodule.exports = AlgorithmVisualization;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithm_visualization.js","import AnimationOptions from './animation_options';\nimport anime from 'animejs';\n// console.log(anime.easings);\n\nclass QuickSort extends AnimationOptions {\n  constructor(options) {\n    super(options);\n    this.containerWidth = $(window).width();\n    this.startElements = [5, 1, 2, 3, 7, 4, 0, 6];\n    this.startElIdPrefix = \"startEl-\";\n    this.startElClassName = \"layer-0-element\";\n    this.startPivotEl = 2;\n    this.numElements = this.startElements.length;\n    this.leftIndent = this.calculateLeftIndent();\n    this.idToColorArray = this.generateIdToColorArray();\n    this.renderLayers(this.idToColorArray);\n    this.renderStartLayer();\n    this.renderLayer1();\n  }\n\n  generateIdToColorArray() {\n    return [\n      [\"layer0-rect\", this.colors.lightGreen2],\n      [\"layer1-rect\", this.colors.lightGreen],\n      [\"layer2-rect\", this.colors.lightBlue2],\n      [\"layer3-rect\", this.colors.lightBlue],\n      [\"layer4-rect\", this.colors.lightBlue3],\n      [\"layer5-rect\", this.colors.lightBlue3],\n      [\"layer6-rect\", this.colors.lightBlue],\n      [\"layer7-rect\", this.colors.lightBlue2],\n      [\"layer8-rect\", this.colors.lightGreen]\n    ];\n  }\n\n  renderStartLayer() {\n    this.renderStartBrackets();\n    this.renderStartElements();\n  }\n\n  renderStartBrackets() {\n    let $svgContainer = $(`#${this.svgContainerId}`);\n\n    let bracketYPos = 10;\n    let bracketSize = Math.floor(this.elementRadius * 2 * 1.4);\n\n    let openBracketOptions = {\n      type: \"open\",\n      xPos: this.leftIndent - 55,\n      yPos: bracketYPos,\n      size: bracketSize,\n      className: `${this.arrayElClassName(0)} bracket`\n    };\n    let closeBracketOptions = {\n      type: \"close\",\n      xPos: this.leftIndent + this.numElements*this.elementWidth - 30,\n      yPos: bracketYPos,\n      size: bracketSize,\n      className: `${this.arrayElClassName(0)} bracket`\n    };\n\n    $svgContainer.append(this.createArrayBracket(openBracketOptions));\n    $svgContainer.append(this.createArrayBracket(closeBracketOptions));\n    $(\"body\").html($(\"body\").html());\n  }\n\n  renderStartElements() {\n    let $svgContainer = $(`#${this.svgContainerId}`);\n    let elementOptions;\n\n    this.startElements.forEach((el, idx) => {\n      elementOptions = {\n        val: el,\n        svgHeight: this.elementHeight,\n        svgWidth: this.elementWidth,\n        svgXPos: this.leftIndent + idx*this.elementWidth,\n        svgYPos: 0,\n        svgElXPosOffset: 0,\n        svgElYPosOffset: 0,\n        fillColor: \"white\",\n        pivot: (el === this.startPivotEl) ? true : false,\n        className: this.arrayElClassName(0),\n        idName: this.arrayElIdName(0, el)\n      };\n\n      if (elementOptions.pivot) elementOptions.className += \" pivot\";\n      $svgContainer.append(this.createSvgArrayElement(elementOptions));\n    });\n\n    $(\"body\").html($(\"body\").html());\n    $(`.${this.arrayElClassName(0)}`).fadeOut(0);\n    $(`.${this.arrayElClassName(0)}`).fadeIn(1500, \"linear\");\n  }\n\n  renderLayer1() {\n    window.setTimeout(() => {\n      // console.log(\"rendering layer 1 callback 1\");\n      $(`.${this.arrayElClassName(0)}.pivot`).css({fill: `${this.pivotColor}`});\n      let $svgContainer = $(`#${this.svgContainerId}`);\n\n      let options = {\n        oldClassName: `${this.arrayElClassName(0)}.pivot`,\n        dx: 0,\n        dy: this.elementHeight,\n        oldLayerNum: 0,\n        newLayerNum: 1,\n        fillColor: `${this.pivotColor}`\n      };\n\n      this.moveArrayElement(options);\n      $(\"body\").html($(\"body\").html());\n      // $(`.${this.arrayElClassName(1)}`).css({fill: `${this.pivotColor}`});\n      // $(\"body\").html($(\"body\").html());\n    }, 2000);\n  }\n\n  calculateLeftIndent() {\n    let vizAreaWidth = $(`#${this.visAreaId}`).width();\n    let startArraySpacing = this.numElements * this.elementWidth;\n    let leftIndent = Math.floor((vizAreaWidth - startArraySpacing)/2);\n    return leftIndent;\n  }\n}\n\nmodule.exports = QuickSort;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/quick_sort.js","import anime from 'animejs';\n\nclass AnimationOptions {\n  constructor(options) {\n    this.visAreaId = options.visAreaId;\n    this.pivotColor = options.pivotColor;\n    this.svgContainerId = options.svgContainerId;\n    this.elementHeight = options.elementHeight;\n    this.elementWidth = options.elementWidth;\n    this.elementRadius = options.elementRadius;\n    this.elementCx = options.elementCx;\n    this.elementCy = options.elementCy;\n    this.fontSize = options.fontSize;\n    this.textY = options.textY;\n    this.textX = options.textX;\n    this.layerHeight = options.layerHeight;\n\n    this.colors = options.colors;\n    // this.printOptions(options);\n  }\n\n  printOptions(options) {\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach(optionKey => {\n      console.log(optionKey, options[optionKey]);\n    });\n  }\n\n  arrayElClassName(layerNum) {\n    return `layer-${layerNum}-element`;\n  }\n\n  arrayElIdName(layerNum, val) {\n    return `layer-${layerNum}-element-${val}`;\n  }\n\n  // pathElClassName(oldLayerNum, newLayerNum, val) {\n  //   return `path-${oldLayerNum}-${newLayerNum}-val-${val}`;\n  // }\n\n  pathElIdName(oldLayerNum, newLayerNum, val) {\n    return `path-${oldLayerNum}-${newLayerNum}-val-${val}`;\n  }\n\n  moveArrayElement(options) {\n    let oldElement, val;\n\n    if (options[\"oldClassName\"]) {\n      oldElement = $(`.${options.oldClassName}`);\n    } else if (options[\"oldIdName\"]) {\n      oldElement = $(`#${options.oldIdName}`);\n    } else {\n      throw `Error in AnimationOptions#moveArrayElement - ` +\n            `no oldIdName or oldClassName provided` +\n            `options received: ${options}`;\n    }\n\n    let oldX, oldY, newX, newY;\n    let svgXPos, svgYPos, svgHeight, svgWidth;\n    let svgElXPosOffset, svgElYPosOffset;\n\n    val = oldElement.find(\"text\").text();\n    oldX = parseInt(oldElement.css(\"x\"));\n    oldY = parseInt(oldElement.css(\"y\"));\n    newX = oldX + options.dx;\n    newY = oldY + options.dy;\n\n    svgWidth = Math.abs(newX - oldX) + this.elementWidth;\n    svgHeight = Math.abs(newY - oldY) + this.elementHeight;\n    svgXPos = Math.min(oldX, newX);\n    svgYPos = 0;  // used to be Math.min(oldY, newY), I think it should just be 0\n    svgElXPosOffset = svgXPos < oldX ? Math.abs(newX - oldX) : 0;\n    svgElYPosOffset = 0; // used to be svgYPos < oldY\n                         //                    ? Math.abs(newY - oldY) : 0;\n                         // I think it should just be 0\n\n    let svgArrayElementParams = {\n      svgHeight: svgHeight,\n      svgWidth: svgWidth,\n      svgXPos: svgXPos,\n      svgYPos: svgYPos,\n      svgElXPosOffset: svgElXPosOffset,\n      svgElYPosOffset: svgElYPosOffset,\n      fillColor: options.fillColor,\n      val: val,\n      className: this.arrayElClassName(options.newLayerNum),\n      idName: this.arrayElIdName(options.newLayerNum, val)\n    };\n\n    let pathIdName = this.pathElIdName(options.oldLayerNum, options.newLayerNum, val);\n\n    let pathParams = {\n      svgElXPosOffset: svgElXPosOffset,\n      svgElYPosOffset: svgElYPosOffset,\n      horizontal: options.dx,\n      vertical: options.dy,\n      color: this.colors.pathColor,\n      idName: pathIdName\n    };\n\n\n    let $svgContainer = $(`#${this.svgContainerId}`);\n    let newSvgEl = this.createSvgArrayElement(svgArrayElementParams);\n    let newPath = this.createPath(pathParams);\n    newSvgEl.append(newPath);\n    $svgContainer.append(newSvgEl);\n    $(\"body\").html($(\"body\").html());\n\n    var myPath = anime.path(`#${pathIdName}`);\n\n    anime({\n      targets: `circle`,\n      // targets: `circle.${svgArrayElementParams.className}`,\n      translateX: myPath,\n      translateY: myPath,\n      rotate: myPath,\n      duration: 1000,\n      loop: true,\n      easing: 'linear'\n    });\n\n    // console.log(\"active animations: \", anime.list)\n    // debugger\n  }\n\n  createPath(options) {\n    let xStart = this.elementCx + options.svgElXPosOffset;\n    let yStart = this.elementCy + options.svgElYPosOffset;\n\n    let pathParams = {\n      fill: \"none\",\n      stroke: options.color,\n      \"stroke-width\": 3,\n      id: options.idName,\n      d: `M${xStart},${yStart} v${options.vertical} h${options.horizontal}`\n    };\n\n    // pathParams.d += `M${xStart},${yStart}`;\n    // pathParams.d += ` v${options.vertical} h${options.horizontal}`;\n\n    let $path = $(\"<path>\", pathParams);\n    return $path;\n  }\n\n  createSvgArrayElement(options) {\n    let svgParams = {\n      height: options.svgHeight,\n      width: options.svgWidth,\n      x: options.svgXPos,\n      y: options.svgYPos,\n      class: options.className,\n      id: options.idName\n    };\n\n    let circleParams = {\n      \"cx\": this.elementCx + options.svgElXPosOffset,\n      \"cy\": this.elementCy + options.svgElYPosOffset,\n      \"r\": this.elementRadius,\n      \"fill\": options.fillColor,\n      \"stroke\": \"black\",\n      \"stroke-width\": \"3\",\n      class: options.className\n    };\n\n    let textParams = {x: this.textX + options.svgElXPosOffset,\n                      y: this.textY + options.svgElYPosOffset,\n                      fill: \"black\",\n                      style: `font-size:${this.fontSize}`};\n\n    let $svg = $(\"<svg>\", svgParams);\n    let $circle = $(\"<circle>\", circleParams);\n    let $text = $(\"<text>\", textParams);\n    $text.text(options.val);\n    $svg.append($circle);\n    $svg.append($text);\n    return $svg;\n  }\n\n  createArrayBracket(options) {\n    let val = options.type === \"open\" ? \"[\" : \"]\";\n    let svgParams = {\n      height: this.elementHeight,\n      width: 20,\n      x: options.xPos,\n      y: options.yPos,\n      class: options.className\n    };\n    let textParams = {x: this.textX, y: this.textY, fill: \"black\",\n                      style: `font-size:${options.size}`};\n    let $svg = $(\"<svg>\", svgParams);\n    let $text = $(\"<text>\", textParams);\n\n    $text.text(val);\n    $svg.append($text);\n    return $svg;\n  }\n\n  // idToColorArray is an array of arrays, which each internal array is\n  // a [id, class] pair.  Order should be from the first to last layer.\n  renderLayers(idToColorArray) {\n    let numLayers = idToColorArray.length;\n    let $div = $(\"<div>\", {id: \"start-layer\", \"class\": \"layer\",\n                           height: this.layerHeight * idToColorArray.length });\n    let $svgContainer = $(\"<svg>\", {width: \"100%\",\n                          height: this.elementHeight * idToColorArray.length,\n                          id: `${this.svgContainerId}`});\n    let newLayer, idName, color, yPosition;\n\n    idToColorArray.forEach((arr, idx) => {\n      idName = arr[0];\n      color = arr[1];\n      yPosition = this.layerHeight * idx;\n      // newLayer = this.createLayer(idName, color, layerHeight);\n      $svgContainer.append(this.createLayer(idName, color, yPosition));\n      // $svgContainer.append(newLayer);\n    });\n\n    $div.append($svgContainer);\n    $(\"#visualization-area\").append($div);\n    $(\"body\").html($(\"body\").html());\n  }\n\n  createLayer(idName, color, height) {\n    // width and color provided by class\n    let svgParams = {\n      \"height\": this.elementHeight,\n      \"id\": idName,\n      \"x\": 0,\n      \"y\": height\n    };\n    let $svg = $(\"<svg>\", svgParams);\n    // return $svg;\n    let rectParams = {\n      width: \"100%\",\n      height: this.elementHeight,\n      \"fill\": color,\n      \"stroke-width\": 1,\n      \"stroke\": \"black\"\n    };\n    let $rect = $(\"<rect>\", rectParams);\n    $svg.append($rect);\n    return $svg;\n  }\n}\n\nmodule.exports = AnimationOptions;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/animation_options.js","/*\n * Anime v1.1.1\n * http://anime-js.com\n * JavaScript animation engine\n * Copyright (c) 2016 Julian Garnier\n * http://juliangarnier.com\n * Released under the MIT license\n */\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.anime = factory();\n  }\n}(this, function () {\n\n  var version = '1.1.1';\n\n  // Defaults\n\n  var defaultSettings = {\n    duration: 1000,\n    delay: 0,\n    loop: false,\n    autoplay: true,\n    direction: 'normal',\n    easing: 'easeOutElastic',\n    elasticity: 400,\n    round: false,\n    begin: undefined,\n    update: undefined,\n    complete: undefined\n  }\n\n  // Transforms\n\n  var validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skewX', 'skewY'];\n  var transform, transformStr = 'transform';\n\n  // Utils\n\n  var is = {\n    arr: function(a) { return Array.isArray(a) },\n    obj: function(a) { return Object.prototype.toString.call(a).indexOf('Object') > -1 },\n    svg: function(a) { return a instanceof SVGElement },\n    dom: function(a) { return a.nodeType || is.svg(a) },\n    num: function(a) { return !isNaN(parseInt(a)) },\n    str: function(a) { return typeof a === 'string' },\n    fnc: function(a) { return typeof a === 'function' },\n    und: function(a) { return typeof a === 'undefined' },\n    nul: function(a) { return typeof a === 'null' },\n    hex: function(a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a) },\n    rgb: function(a) { return /^rgb/.test(a) },\n    hsl: function(a) { return /^hsl/.test(a) },\n    col: function(a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)) }\n  }\n\n  // Easings functions adapted from http://jqueryui.com/\n\n  var easings = (function() {\n    var eases = {};\n    var names = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n    var functions = {\n      Sine: function(t) { return 1 - Math.cos( t * Math.PI / 2 ); },\n      Circ: function(t) { return 1 - Math.sqrt( 1 - t * t ); },\n      Elastic: function(t, m) {\n        if( t === 0 || t === 1 ) return t;\n        var p = (1 - Math.min(m, 998) / 1000), st = t / 1, st1 = st - 1, s = p / ( 2 * Math.PI ) * Math.asin( 1 );\n        return -( Math.pow( 2, 10 * st1 ) * Math.sin( ( st1 - s ) * ( 2 * Math.PI ) / p ) );\n      },\n      Back: function(t) { return t * t * ( 3 * t - 2 ); },\n      Bounce: function(t) {\n        var pow2, bounce = 4;\n        while ( t < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}\n        return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - t, 2 );\n      }\n    }\n    names.forEach(function(name, i) {\n      functions[name] = function(t) {\n        return Math.pow( t, i + 2 );\n      }\n    });\n    Object.keys(functions).forEach(function(name) {\n      var easeIn = functions[name];\n      eases['easeIn' + name] = easeIn;\n      eases['easeOut' + name] = function(t, m) { return 1 - easeIn(1 - t, m); };\n      eases['easeInOut' + name] = function(t, m) { return t < 0.5 ? easeIn(t * 2, m) / 2 : 1 - easeIn(t * -2 + 2, m) / 2; };\n      eases['easeOutIn' + name] = function(t, m) { return t < 0.5 ? (1 - easeIn(1 - 2 * t, m)) / 2 : (easeIn(t * 2 - 1, m) + 1) / 2; };\n    });\n    eases.linear = function(t) { return t; };\n    return eases;\n  })();\n\n  // Strings\n\n  var numberToString = function(val) {\n    return (is.str(val)) ? val : val + '';\n  }\n\n  var stringToHyphens = function(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  var selectString = function(str) {\n    if (is.col(str)) return false;\n    try {\n      var nodes = document.querySelectorAll(str);\n      return nodes;\n    } catch(e) {\n      return false;\n    }\n  }\n\n  // Numbers\n\n  var random = function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  // Arrays\n\n  var flattenArray = function(arr) {\n    return arr.reduce(function(a, b) {\n      return a.concat(is.arr(b) ? flattenArray(b) : b);\n    }, []);\n  }\n\n  var toArray = function(o) {\n    if (is.arr(o)) return o;\n    if (is.str(o)) o = selectString(o) || o;\n    if (o instanceof NodeList || o instanceof HTMLCollection) return [].slice.call(o);\n    return [o];\n  }\n\n  var arrayContains = function(arr, val) {\n    return arr.some(function(a) { return a === val; });\n  }\n\n  var groupArrayByProps = function(arr, propsArr) {\n    var groups = {};\n    arr.forEach(function(o) {\n      var group = JSON.stringify(propsArr.map(function(p) { return o[p]; }));\n      groups[group] = groups[group] || [];\n      groups[group].push(o);\n    });\n    return Object.keys(groups).map(function(group) {\n      return groups[group];\n    });\n  }\n\n  var removeArrayDuplicates = function(arr) {\n    return arr.filter(function(item, pos, self) {\n      return self.indexOf(item) === pos;\n    });\n  }\n\n  // Objects\n\n  var cloneObject = function(o) {\n    var newObject = {};\n    for (var p in o) newObject[p] = o[p];\n    return newObject;\n  }\n\n  var mergeObjects = function(o1, o2) {\n    for (var p in o2) o1[p] = !is.und(o1[p]) ? o1[p] : o2[p];\n    return o1;\n  }\n\n  // Colors\n\n  var hexToRgb = function(hex) {\n    var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    var hex = hex.replace(rgx, function(m, r, g, b) { return r + r + g + g + b + b; });\n    var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    var r = parseInt(rgb[1], 16);\n    var g = parseInt(rgb[2], 16);\n    var b = parseInt(rgb[3], 16);\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  }\n\n  var hslToRgb = function(hsl) {\n    var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hsl);\n    var h = parseInt(hsl[1]) / 360;\n    var s = parseInt(hsl[2]) / 100;\n    var l = parseInt(hsl[3]) / 100;\n    var hue2rgb = function(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n    var r, g, b;\n    if (s == 0) {\n      r = g = b = l;\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n    return 'rgb(' + r * 255 + ',' + g * 255 + ',' + b * 255 + ')';\n  }\n\n  var colorToRgb = function(val) {\n    if (is.rgb(val)) return val;\n    if (is.hex(val)) return hexToRgb(val);\n    if (is.hsl(val)) return hslToRgb(val);\n  }\n\n  // Units\n\n  var getUnit = function(val) {\n    return /([\\+\\-]?[0-9|auto\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg)?/.exec(val)[2];\n  }\n\n  var addDefaultTransformUnit = function(prop, val, intialVal) {\n    if (getUnit(val)) return val;\n    if (prop.indexOf('translate') > -1) return getUnit(intialVal) ? val + getUnit(intialVal) : val + 'px';\n    if (prop.indexOf('rotate') > -1 || prop.indexOf('skew') > -1) return val + 'deg';\n    return val;\n  }\n\n  // Values\n\n  var getCSSValue = function(el, prop) {\n    // First check if prop is a valid CSS property\n    if (prop in el.style) {\n      // Then return the property value or fallback to '0' when getPropertyValue fails\n      return getComputedStyle(el).getPropertyValue(stringToHyphens(prop)) || '0';\n    }\n  }\n\n  var getTransformValue = function(el, prop) {\n    var defaultVal = prop.indexOf('scale') > -1 ? 1 : 0;\n    var str = el.style.transform;\n    if (!str) return defaultVal;\n    var rgx = /(\\w+)\\((.+?)\\)/g;\n    var match = [];\n    var props = [];\n    var values = [];\n    while (match = rgx.exec(str)) {\n      props.push(match[1]);\n      values.push(match[2]);\n    }\n    var val = values.filter(function(f, i) { return props[i] === prop; });\n    return val.length ? val[0] : defaultVal;\n  }\n\n  var getAnimationType = function(el, prop) {\n    if ( is.dom(el) && arrayContains(validTransforms, prop)) return 'transform';\n    if ( is.dom(el) && (el.getAttribute(prop) || (is.svg(el) && el[prop]))) return 'attribute';\n    if ( is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) return 'css';\n    if (!is.nul(el[prop]) && !is.und(el[prop])) return 'object';\n  }\n\n  var getInitialTargetValue = function(target, prop) {\n    switch (getAnimationType(target, prop)) {\n      case 'transform': return getTransformValue(target, prop);\n      case 'css': return getCSSValue(target, prop);\n      case 'attribute': return target.getAttribute(prop);\n    }\n    return target[prop] || 0;\n  }\n\n  var getValidValue = function(values, val, originalCSS) {\n    if (is.col(val)) return colorToRgb(val);\n    if (getUnit(val)) return val;\n    var unit = getUnit(values.to) ? getUnit(values.to) : getUnit(values.from);\n    if (!unit && originalCSS) unit = getUnit(originalCSS);\n    return unit ? val + unit : val;\n  }\n\n  var decomposeValue = function(val) {\n    var rgx = /-?\\d*\\.?\\d+/g;\n    return {\n      original: val,\n      numbers: numberToString(val).match(rgx) ? numberToString(val).match(rgx).map(Number) : [0],\n      strings: numberToString(val).split(rgx)\n    }\n  }\n\n  var recomposeValue = function(numbers, strings, initialStrings) {\n    return strings.reduce(function(a, b, i) {\n      var b = (b ? b : initialStrings[i - 1]);\n      return a + numbers[i - 1] + b;\n    });\n  }\n\n  // Animatables\n\n  var getAnimatables = function(targets) {\n    var targets = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n    return targets.map(function(t, i) {\n      return { target: t, id: i };\n    });\n  }\n\n  // Properties\n\n  var getProperties = function(params, settings) {\n    var props = [];\n    for (var p in params) {\n      if (!defaultSettings.hasOwnProperty(p) && p !== 'targets') {\n        var prop = is.obj(params[p]) ? cloneObject(params[p]) : {value: params[p]};\n        prop.name = p;\n        props.push(mergeObjects(prop, settings));\n      }\n    }\n    return props;\n  }\n\n  var getPropertiesValues = function(target, prop, value, i) {\n    var values = toArray( is.fnc(value) ? value(target, i) : value);\n    return {\n      from: (values.length > 1) ? values[0] : getInitialTargetValue(target, prop),\n      to: (values.length > 1) ? values[1] : values[0]\n    }\n  }\n\n  // Tweens\n\n  var getTweenValues = function(prop, values, type, target) {\n    var valid = {};\n    if (type === 'transform') {\n      valid.from = prop + '(' + addDefaultTransformUnit(prop, values.from, values.to) + ')';\n      valid.to = prop + '(' + addDefaultTransformUnit(prop, values.to) + ')';\n    } else {\n      var originalCSS = (type === 'css') ? getCSSValue(target, prop) : undefined;\n      valid.from = getValidValue(values, values.from, originalCSS);\n      valid.to = getValidValue(values, values.to, originalCSS);\n    }\n    return { from: decomposeValue(valid.from), to: decomposeValue(valid.to) };\n  }\n\n  var getTweensProps = function(animatables, props) {\n    var tweensProps = [];\n    animatables.forEach(function(animatable, i) {\n      var target = animatable.target;\n      return props.forEach(function(prop) {\n        var animType = getAnimationType(target, prop.name);\n        if (animType) {\n          var values = getPropertiesValues(target, prop.name, prop.value, i);\n          var tween = cloneObject(prop);\n          tween.animatables = animatable;\n          tween.type = animType;\n          tween.from = getTweenValues(prop.name, values, tween.type, target).from;\n          tween.to = getTweenValues(prop.name, values, tween.type, target).to;\n          tween.round = (is.col(values.from) || tween.round) ? 1 : 0;\n          tween.delay = (is.fnc(tween.delay) ? tween.delay(target, i, animatables.length) : tween.delay) / animation.speed;\n          tween.duration = (is.fnc(tween.duration) ? tween.duration(target, i, animatables.length) : tween.duration) / animation.speed;\n          tweensProps.push(tween);\n        }\n      });\n    });\n    return tweensProps;\n  }\n\n  var getTweens = function(animatables, props) {\n    var tweensProps = getTweensProps(animatables, props);\n    var splittedProps = groupArrayByProps(tweensProps, ['name', 'from', 'to', 'delay', 'duration']);\n    return splittedProps.map(function(tweenProps) {\n      var tween = cloneObject(tweenProps[0]);\n      tween.animatables = tweenProps.map(function(p) { return p.animatables });\n      tween.totalDuration = tween.delay + tween.duration;\n      return tween;\n    });\n  }\n\n  var reverseTweens = function(anim, delays) {\n    anim.tweens.forEach(function(tween) {\n      var toVal = tween.to;\n      var fromVal = tween.from;\n      var delayVal = anim.duration - (tween.delay + tween.duration);\n      tween.from = toVal;\n      tween.to = fromVal;\n      if (delays) tween.delay = delayVal;\n    });\n    anim.reversed = anim.reversed ? false : true;\n  }\n\n  var getTweensDuration = function(tweens) {\n    if (tweens.length) return Math.max.apply(Math, tweens.map(function(tween){ return tween.totalDuration; }));\n  }\n\n  // will-change\n\n  var getWillChange = function(anim) {\n    var props = [];\n    var els = [];\n    anim.tweens.forEach(function(tween) {\n      if (tween.type === 'css' || tween.type === 'transform' ) {\n        props.push(tween.type === 'css' ? stringToHyphens(tween.name) : 'transform');\n        tween.animatables.forEach(function(animatable) { els.push(animatable.target); });\n      }\n    });\n    return {\n      properties: removeArrayDuplicates(props).join(', '),\n      elements: removeArrayDuplicates(els)\n    }\n  }\n\n  var setWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.willChange = willChange.properties;\n    });\n  }\n\n  var removeWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.removeProperty('will-change');\n    });\n  }\n\n  /* Svg path */\n\n  var getPathProps = function(path) {\n    var el = is.str(path) ? selectString(path)[0] : path;\n    return {\n      path: el,\n      value: el.getTotalLength()\n    }\n  }\n\n  var snapProgressToPath = function(tween, progress) {\n    var pathEl = tween.path;\n    var pathProgress = tween.value * progress;\n    var point = function(offset) {\n      var o = offset || 0;\n      var p = progress > 1 ? tween.value + o : pathProgress + o;\n      return pathEl.getPointAtLength(p);\n    }\n    var p = point();\n    var p0 = point(-1);\n    var p1 = point(+1);\n    switch (tween.name) {\n      case 'translateX': return p.x;\n      case 'translateY': return p.y;\n      case 'rotate': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n    }\n  }\n\n  // Progress\n\n  var getTweenProgress = function(tween, time) {\n    var elapsed = Math.min(Math.max(time - tween.delay, 0), tween.duration);\n    var percent = elapsed / tween.duration;\n    var progress = tween.to.numbers.map(function(number, p) {\n      var start = tween.from.numbers[p];\n      var eased = easings[tween.easing](percent, tween.elasticity);\n      var val = tween.path ? snapProgressToPath(tween, eased) : start + eased * (number - start);\n      val = tween.round ? Math.round(val * tween.round) / tween.round : val;\n      return val;\n    });\n    return recomposeValue(progress, tween.to.strings, tween.from.strings);\n  }\n\n  var setAnimationProgress = function(anim, time) {\n    var transforms;\n    anim.currentTime = time;\n    anim.progress = (time / anim.duration) * 100;\n    for (var t = 0; t < anim.tweens.length; t++) {\n      var tween = anim.tweens[t];\n      tween.currentValue = getTweenProgress(tween, time);\n      var progress = tween.currentValue;\n      for (var a = 0; a < tween.animatables.length; a++) {\n        var animatable = tween.animatables[a];\n        var id = animatable.id;\n        var target = animatable.target;\n        var name = tween.name;\n        switch (tween.type) {\n          case 'css': target.style[name] = progress; break;\n          case 'attribute': target.setAttribute(name, progress); break;\n          case 'object': target[name] = progress; break;\n          case 'transform':\n          if (!transforms) transforms = {};\n          if (!transforms[id]) transforms[id] = [];\n          transforms[id].push(progress);\n          break;\n        }\n      }\n    }\n    if (transforms) {\n      if (!transform) transform = (getCSSValue(document.body, transformStr) ? '' : '-webkit-') + transformStr;\n      for (var t in transforms) {\n        anim.animatables[t].target.style[transform] = transforms[t].join(' ');\n      }\n    }\n    if (anim.settings.update) anim.settings.update(anim);\n  }\n\n  // Animation\n\n  var createAnimation = function(params) {\n    var anim = {};\n    anim.animatables = getAnimatables(params.targets);\n    anim.settings = mergeObjects(params, defaultSettings);\n    anim.properties = getProperties(params, anim.settings);\n    anim.tweens = getTweens(anim.animatables, anim.properties);\n    anim.duration = getTweensDuration(anim.tweens) || params.duration;\n    anim.currentTime = 0;\n    anim.progress = 0;\n    anim.ended = false;\n    return anim;\n  }\n\n  // Public\n\n  var animations = [];\n  var raf = 0;\n\n  var engine = (function() {\n    var play = function() { raf = requestAnimationFrame(step); };\n    var step = function(t) {\n      if (animations.length) {\n        for (var i = 0; i < animations.length; i++) animations[i].tick(t);\n        play();\n      } else {\n        cancelAnimationFrame(raf);\n        raf = 0;\n      }\n    }\n    return play;\n  })();\n\n  var animation = function(params) {\n\n    var anim = createAnimation(params);\n    var time = {};\n\n    anim.tick = function(now) {\n      anim.ended = false;\n      if (!time.start) time.start = now;\n      time.current = Math.min(Math.max(time.last + now - time.start, 0), anim.duration);\n      setAnimationProgress(anim, time.current);\n      var s = anim.settings;\n      if (s.begin && time.current >= s.delay) { s.begin(anim); s.begin = undefined; };\n      if (time.current >= anim.duration) {\n        if (s.loop) {\n          time.start = now;\n          if (s.direction === 'alternate') reverseTweens(anim, true);\n          if (is.num(s.loop)) s.loop--;\n        } else {\n          anim.ended = true;\n          anim.pause();\n          if (s.complete) s.complete(anim);\n        }\n        time.last = 0;\n      }\n    }\n\n    anim.seek = function(progress) {\n      setAnimationProgress(anim, (progress / 100) * anim.duration);\n    }\n\n    anim.pause = function() {\n      removeWillChange(anim);\n      var i = animations.indexOf(anim);\n      if (i > -1) animations.splice(i, 1);\n    }\n\n    anim.play = function(params) {\n      anim.pause();\n      if (params) anim = mergeObjects(createAnimation(mergeObjects(params, anim.settings)), anim);\n      time.start = 0;\n      time.last = anim.ended ? 0 : anim.currentTime;\n      var s = anim.settings;\n      if (s.direction === 'reverse') reverseTweens(anim);\n      if (s.direction === 'alternate' && !s.loop) s.loop = 1;\n      setWillChange(anim);\n      animations.push(anim);\n      if (!raf) engine();\n    }\n\n    anim.restart = function() {\n      if (anim.reversed) reverseTweens(anim);\n      anim.pause();\n      anim.seek(0);\n      anim.play();\n    }\n\n    if (anim.settings.autoplay) anim.play();\n\n    return anim;\n\n  }\n\n  // Remove one or multiple targets from all active animations.\n\n  var remove = function(elements) {\n    var targets = flattenArray(is.arr(elements) ? elements.map(toArray) : toArray(elements));\n    for (var i = animations.length-1; i >= 0; i--) {\n      var animation = animations[i];\n      var tweens = animation.tweens;\n      for (var t = tweens.length-1; t >= 0; t--) {\n        var animatables = tweens[t].animatables;\n        for (var a = animatables.length-1; a >= 0; a--) {\n          if (arrayContains(targets, animatables[a].target)) {\n            animatables.splice(a, 1);\n            if (!animatables.length) tweens.splice(t, 1);\n            if (!tweens.length) animation.pause();\n          }\n        }\n      }\n    }\n  }\n\n  animation.version = version;\n  animation.speed = 1;\n  animation.list = animations;\n  animation.remove = remove;\n  animation.easings = easings;\n  animation.getValue = getInitialTargetValue;\n  animation.path = getPathProps;\n  animation.random = random;\n\n  return animation;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/animejs/anime.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}